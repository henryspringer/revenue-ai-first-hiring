{"ast":null,"code":"import React, { forwardRef, useState, useRef, useId, useImperativeHandle, useCallback, useEffect, Children } from 'react';\nimport { findFirstFocusableNodeIncludingDisabled, focusNextFocusableNode } from '../../utilities/focus.js';\nimport { portal } from '../shared.js';\nimport { setActivatorAttributes } from './set-activator-attributes.js';\nimport { PopoverOverlay, PopoverCloseSource } from './components/PopoverOverlay/PopoverOverlay.js';\nimport { Pane } from './components/Pane/Pane.js';\nimport { Section } from './components/Section/Section.js';\nimport { Portal } from '../Portal/Portal.js';\n\n// TypeScript can't generate types that correctly infer the typing of\n// subcomponents so explicitly state the subcomponents in the type definition.\n// Letting this be implicit works in this project but fails in projects that use\n// generated *.d.ts files.\nconst PopoverComponent = /*#__PURE__*/forwardRef(function Popover({\n  activatorWrapper = 'div',\n  children,\n  onClose,\n  activator,\n  preventFocusOnClose,\n  active,\n  fixed,\n  ariaHaspopup,\n  preferInputActivator = true,\n  zIndexOverride,\n  ...rest\n}, ref) {\n  const [activatorNode, setActivatorNode] = useState();\n  const overlayRef = useRef(null);\n  const activatorContainer = useRef(null);\n  const WrapperComponent = activatorWrapper;\n  const id = useId();\n  function forceUpdatePosition() {\n    overlayRef.current?.forceUpdatePosition();\n  }\n  useImperativeHandle(ref, () => {\n    return {\n      forceUpdatePosition\n    };\n  });\n  const setAccessibilityAttributes = useCallback(() => {\n    if (activatorContainer.current == null) {\n      return;\n    }\n    const firstFocusable = findFirstFocusableNodeIncludingDisabled(activatorContainer.current);\n    const focusableActivator = firstFocusable || activatorContainer.current;\n    const activatorDisabled = 'disabled' in focusableActivator && Boolean(focusableActivator.disabled);\n    setActivatorAttributes(focusableActivator, {\n      id,\n      active,\n      ariaHaspopup,\n      activatorDisabled\n    });\n  }, [id, active, ariaHaspopup]);\n  const handleClose = source => {\n    onClose(source);\n    if (activatorContainer.current == null || preventFocusOnClose) {\n      return;\n    }\n    if (source === PopoverCloseSource.FocusOut && activatorNode) {\n      const focusableActivator = findFirstFocusableNodeIncludingDisabled(activatorNode) || findFirstFocusableNodeIncludingDisabled(activatorContainer.current) || activatorContainer.current;\n      if (!focusNextFocusableNode(focusableActivator, isInPortal)) {\n        focusableActivator.focus();\n      }\n    } else if (source === PopoverCloseSource.EscapeKeypress && activatorNode) {\n      const focusableActivator = findFirstFocusableNodeIncludingDisabled(activatorNode) || findFirstFocusableNodeIncludingDisabled(activatorContainer.current) || activatorContainer.current;\n      if (focusableActivator) {\n        focusableActivator.focus();\n      } else {\n        focusNextFocusableNode(focusableActivator, isInPortal);\n      }\n    }\n  };\n  useEffect(() => {\n    if (!activatorNode && activatorContainer.current) {\n      setActivatorNode(activatorContainer.current.firstElementChild);\n    } else if (activatorNode && activatorContainer.current && !activatorContainer.current.contains(activatorNode)) {\n      setActivatorNode(activatorContainer.current.firstElementChild);\n    }\n    setAccessibilityAttributes();\n  }, [activatorNode, setAccessibilityAttributes]);\n  useEffect(() => {\n    if (activatorNode && activatorContainer.current) {\n      setActivatorNode(activatorContainer.current.firstElementChild);\n    }\n    setAccessibilityAttributes();\n  }, [activatorNode, setAccessibilityAttributes]);\n  const portal = activatorNode ? /*#__PURE__*/React.createElement(Portal, {\n    idPrefix: \"popover\"\n  }, /*#__PURE__*/React.createElement(PopoverOverlay, Object.assign({\n    ref: overlayRef,\n    id: id,\n    activator: activatorNode,\n    preferInputActivator: preferInputActivator,\n    onClose: handleClose,\n    active: active,\n    fixed: fixed,\n    zIndexOverride: zIndexOverride\n  }, rest), children)) : null;\n  return /*#__PURE__*/React.createElement(WrapperComponent, {\n    ref: activatorContainer\n  }, Children.only(activator), portal);\n});\nfunction isInPortal(element) {\n  let parentElement = element.parentElement;\n  while (parentElement) {\n    if (parentElement.matches(portal.selector)) return false;\n    parentElement = parentElement.parentElement;\n  }\n  return true;\n}\nconst Popover = Object.assign(PopoverComponent, {\n  Pane,\n  Section\n});\nexport { Popover, PopoverCloseSource };","map":{"version":3,"names":["React","forwardRef","useState","useRef","useId","useImperativeHandle","useCallback","useEffect","Children","findFirstFocusableNodeIncludingDisabled","focusNextFocusableNode","portal","setActivatorAttributes","PopoverOverlay","PopoverCloseSource","Pane","Section","Portal","PopoverComponent","Popover","activatorWrapper","children","onClose","activator","preventFocusOnClose","active","fixed","ariaHaspopup","preferInputActivator","zIndexOverride","rest","ref","activatorNode","setActivatorNode","overlayRef","activatorContainer","WrapperComponent","id","forceUpdatePosition","current","setAccessibilityAttributes","firstFocusable","focusableActivator","activatorDisabled","Boolean","disabled","handleClose","source","FocusOut","isInPortal","focus","EscapeKeypress","firstElementChild","contains","createElement","idPrefix","Object","assign","only","element","parentElement","matches","selector"],"sources":["/Users/henryspringer/Henry Cursor Folder/revenue-ai-dashboard/node_modules/@shopify/polaris/build/esm/components/Popover/Popover.js"],"sourcesContent":["import React, { forwardRef, useState, useRef, useId, useImperativeHandle, useCallback, useEffect, Children } from 'react';\nimport { findFirstFocusableNodeIncludingDisabled, focusNextFocusableNode } from '../../utilities/focus.js';\nimport { portal } from '../shared.js';\nimport { setActivatorAttributes } from './set-activator-attributes.js';\nimport { PopoverOverlay, PopoverCloseSource } from './components/PopoverOverlay/PopoverOverlay.js';\nimport { Pane } from './components/Pane/Pane.js';\nimport { Section } from './components/Section/Section.js';\nimport { Portal } from '../Portal/Portal.js';\n\n// TypeScript can't generate types that correctly infer the typing of\n// subcomponents so explicitly state the subcomponents in the type definition.\n// Letting this be implicit works in this project but fails in projects that use\n// generated *.d.ts files.\nconst PopoverComponent = /*#__PURE__*/forwardRef(function Popover({\n  activatorWrapper = 'div',\n  children,\n  onClose,\n  activator,\n  preventFocusOnClose,\n  active,\n  fixed,\n  ariaHaspopup,\n  preferInputActivator = true,\n  zIndexOverride,\n  ...rest\n}, ref) {\n  const [activatorNode, setActivatorNode] = useState();\n  const overlayRef = useRef(null);\n  const activatorContainer = useRef(null);\n  const WrapperComponent = activatorWrapper;\n  const id = useId();\n  function forceUpdatePosition() {\n    overlayRef.current?.forceUpdatePosition();\n  }\n  useImperativeHandle(ref, () => {\n    return {\n      forceUpdatePosition\n    };\n  });\n  const setAccessibilityAttributes = useCallback(() => {\n    if (activatorContainer.current == null) {\n      return;\n    }\n    const firstFocusable = findFirstFocusableNodeIncludingDisabled(activatorContainer.current);\n    const focusableActivator = firstFocusable || activatorContainer.current;\n    const activatorDisabled = 'disabled' in focusableActivator && Boolean(focusableActivator.disabled);\n    setActivatorAttributes(focusableActivator, {\n      id,\n      active,\n      ariaHaspopup,\n      activatorDisabled\n    });\n  }, [id, active, ariaHaspopup]);\n  const handleClose = source => {\n    onClose(source);\n    if (activatorContainer.current == null || preventFocusOnClose) {\n      return;\n    }\n    if (source === PopoverCloseSource.FocusOut && activatorNode) {\n      const focusableActivator = findFirstFocusableNodeIncludingDisabled(activatorNode) || findFirstFocusableNodeIncludingDisabled(activatorContainer.current) || activatorContainer.current;\n      if (!focusNextFocusableNode(focusableActivator, isInPortal)) {\n        focusableActivator.focus();\n      }\n    } else if (source === PopoverCloseSource.EscapeKeypress && activatorNode) {\n      const focusableActivator = findFirstFocusableNodeIncludingDisabled(activatorNode) || findFirstFocusableNodeIncludingDisabled(activatorContainer.current) || activatorContainer.current;\n      if (focusableActivator) {\n        focusableActivator.focus();\n      } else {\n        focusNextFocusableNode(focusableActivator, isInPortal);\n      }\n    }\n  };\n  useEffect(() => {\n    if (!activatorNode && activatorContainer.current) {\n      setActivatorNode(activatorContainer.current.firstElementChild);\n    } else if (activatorNode && activatorContainer.current && !activatorContainer.current.contains(activatorNode)) {\n      setActivatorNode(activatorContainer.current.firstElementChild);\n    }\n    setAccessibilityAttributes();\n  }, [activatorNode, setAccessibilityAttributes]);\n  useEffect(() => {\n    if (activatorNode && activatorContainer.current) {\n      setActivatorNode(activatorContainer.current.firstElementChild);\n    }\n    setAccessibilityAttributes();\n  }, [activatorNode, setAccessibilityAttributes]);\n  const portal = activatorNode ? /*#__PURE__*/React.createElement(Portal, {\n    idPrefix: \"popover\"\n  }, /*#__PURE__*/React.createElement(PopoverOverlay, Object.assign({\n    ref: overlayRef,\n    id: id,\n    activator: activatorNode,\n    preferInputActivator: preferInputActivator,\n    onClose: handleClose,\n    active: active,\n    fixed: fixed,\n    zIndexOverride: zIndexOverride\n  }, rest), children)) : null;\n  return /*#__PURE__*/React.createElement(WrapperComponent, {\n    ref: activatorContainer\n  }, Children.only(activator), portal);\n});\nfunction isInPortal(element) {\n  let parentElement = element.parentElement;\n  while (parentElement) {\n    if (parentElement.matches(portal.selector)) return false;\n    parentElement = parentElement.parentElement;\n  }\n  return true;\n}\nconst Popover = Object.assign(PopoverComponent, {\n  Pane,\n  Section\n});\n\nexport { Popover, PopoverCloseSource };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React, { useState, useMemo } from 'react';\nimport { SortIcon } from '@shopify/polaris-icons';\nimport { ChoiceList } from '../../../ChoiceList/ChoiceList.js';\nimport { DirectionButton } from './components/DirectionButton/DirectionButton.js';\nimport { useI18n } from '../../../../utilities/i18n/hooks.js';\nimport { Tooltip } from '../../../Tooltip/Tooltip.js';\nimport { Button } from '../../../Button/Button.js';\nimport { Popover } from '../../../Popover/Popover.js';\nimport { Box } from '../../../Box/Box.js';\nlet SortButtonDirection;\n(function (SortButtonDirection) {\n  SortButtonDirection[\"Asc\"] = \"asc\";\n  SortButtonDirection[\"Desc\"] = \"desc\";\n})(SortButtonDirection || (SortButtonDirection = {}));\nfunction SortButton(_ref) {\n  let {\n    choices,\n    selected,\n    onChange,\n    disabled,\n    onChangeKey,\n    onChangeDirection\n  } = _ref;\n  const i18n = useI18n();\n  const [active, setActive] = useState(false);\n  const [selectedValueKey, selectedDirection] = selected[0].split(' ');\n  function handleClick() {\n    setActive(pastActive => !pastActive);\n  }\n  function handleClose() {\n    setActive(false);\n  }\n  function handleChangeChoiceList(sel) {\n    if (onChangeKey) {\n      const [key] = sel[0].split(' ');\n      onChangeKey(key);\n    } else {\n      onChange(sel);\n    }\n  }\n  function handleChangeDirection(sel) {\n    if (onChangeDirection) {\n      const [, direction] = sel[0].split(' ');\n      onChangeDirection(direction);\n    } else {\n      onChange(sel);\n    }\n  }\n  const choiceListChoices = useMemo(() => {\n    const choiceCategories = choices.reduce((acc, curr) => {\n      const alreadyExists = acc.some(option => option.label === curr.label);\n      const [, currentValueDirection] = curr.value.split(' ');\n      const isSameDirection = currentValueDirection === selectedDirection;\n      if (!alreadyExists) {\n        return [...acc, curr];\n      }\n      if (isSameDirection) {\n        return acc.map(option => {\n          if (option.label === curr.label) {\n            return curr;\n          }\n          return option;\n        });\n      }\n      return acc;\n    }, []);\n    return choiceCategories;\n  }, [choices, selectedDirection]);\n  const selectedChoices = choices.filter(choice => {\n    const [currentKey] = choice.value.split(' ');\n    return currentKey === selectedValueKey;\n  });\n  const sortButton = /*#__PURE__*/React.createElement(Tooltip, {\n    content: i18n.translate('Polaris.IndexFilters.SortButton.tooltip'),\n    preferredPosition: \"above\",\n    hoverDelay: 400\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"slim\",\n    icon: SortIcon,\n    onClick: handleClick,\n    disabled: disabled,\n    accessibilityLabel: i18n.translate('Polaris.IndexFilters.SortButton.ariaLabel')\n  }));\n  return /*#__PURE__*/React.createElement(Popover, {\n    active: active && !disabled,\n    activator: sortButton,\n    autofocusTarget: \"first-node\",\n    onClose: handleClose,\n    preferredAlignment: \"right\",\n    fluidContent: true\n  }, /*#__PURE__*/React.createElement(Box, {\n    minWidth: \"148px\",\n    paddingInlineStart: \"300\",\n    paddingInlineEnd: \"300\",\n    paddingBlockStart: \"200\",\n    paddingBlockEnd: \"200\",\n    borderBlockEndWidth: \"025\",\n    borderColor: \"border-secondary\"\n  }, /*#__PURE__*/React.createElement(ChoiceList, {\n    title: i18n.translate('Polaris.IndexFilters.SortButton.title'),\n    choices: choiceListChoices,\n    selected: selected,\n    onChange: handleChangeChoiceList\n  })), /*#__PURE__*/React.createElement(Box, {\n    paddingInlineStart: \"150\",\n    paddingInlineEnd: \"150\",\n    paddingBlockStart: \"200\",\n    paddingBlockEnd: \"200\"\n  }, /*#__PURE__*/React.createElement(DirectionButton, {\n    direction: \"asc\",\n    active: selectedDirection === SortButtonDirection.Asc,\n    onClick: handleChangeDirection,\n    value: selectedChoices?.[0]?.value\n  }, selectedChoices?.[0]?.directionLabel), /*#__PURE__*/React.createElement(DirectionButton, {\n    direction: \"desc\",\n    active: selectedDirection === SortButtonDirection.Desc,\n    onClick: handleChangeDirection,\n    value: selectedChoices?.[1]?.value\n  }, selectedChoices?.[1]?.directionLabel)));\n}\nexport { SortButton, SortButtonDirection };","map":{"version":3,"names":["React","useState","useMemo","SortIcon","ChoiceList","DirectionButton","useI18n","Tooltip","Button","Popover","Box","SortButtonDirection","SortButton","_ref","choices","selected","onChange","disabled","onChangeKey","onChangeDirection","i18n","active","setActive","selectedValueKey","selectedDirection","split","handleClick","pastActive","handleClose","handleChangeChoiceList","sel","key","handleChangeDirection","direction","choiceListChoices","choiceCategories","reduce","acc","curr","alreadyExists","some","option","label","currentValueDirection","value","isSameDirection","map","selectedChoices","filter","choice","currentKey","sortButton","createElement","content","translate","preferredPosition","hoverDelay","size","icon","onClick","accessibilityLabel","activator","autofocusTarget","onClose","preferredAlignment","fluidContent","minWidth","paddingInlineStart","paddingInlineEnd","paddingBlockStart","paddingBlockEnd","borderBlockEndWidth","borderColor","title","Asc","directionLabel","Desc"],"sources":["/Users/henryspringer/Henry Cursor Folder/revenue-ai-first-hiring/node_modules/@shopify/polaris/build/esm/components/IndexFilters/components/SortButton/SortButton.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { SortIcon } from '@shopify/polaris-icons';\nimport { ChoiceList } from '../../../ChoiceList/ChoiceList.js';\nimport { DirectionButton } from './components/DirectionButton/DirectionButton.js';\nimport { useI18n } from '../../../../utilities/i18n/hooks.js';\nimport { Tooltip } from '../../../Tooltip/Tooltip.js';\nimport { Button } from '../../../Button/Button.js';\nimport { Popover } from '../../../Popover/Popover.js';\nimport { Box } from '../../../Box/Box.js';\n\nlet SortButtonDirection;\n(function (SortButtonDirection) {\n  SortButtonDirection[\"Asc\"] = \"asc\";\n  SortButtonDirection[\"Desc\"] = \"desc\";\n})(SortButtonDirection || (SortButtonDirection = {}));\nfunction SortButton({\n  choices,\n  selected,\n  onChange,\n  disabled,\n  onChangeKey,\n  onChangeDirection\n}) {\n  const i18n = useI18n();\n  const [active, setActive] = useState(false);\n  const [selectedValueKey, selectedDirection] = selected[0].split(' ');\n  function handleClick() {\n    setActive(pastActive => !pastActive);\n  }\n  function handleClose() {\n    setActive(false);\n  }\n  function handleChangeChoiceList(sel) {\n    if (onChangeKey) {\n      const [key] = sel[0].split(' ');\n      onChangeKey(key);\n    } else {\n      onChange(sel);\n    }\n  }\n  function handleChangeDirection(sel) {\n    if (onChangeDirection) {\n      const [, direction] = sel[0].split(' ');\n      onChangeDirection(direction);\n    } else {\n      onChange(sel);\n    }\n  }\n  const choiceListChoices = useMemo(() => {\n    const choiceCategories = choices.reduce((acc, curr) => {\n      const alreadyExists = acc.some(option => option.label === curr.label);\n      const [, currentValueDirection] = curr.value.split(' ');\n      const isSameDirection = currentValueDirection === selectedDirection;\n      if (!alreadyExists) {\n        return [...acc, curr];\n      }\n      if (isSameDirection) {\n        return acc.map(option => {\n          if (option.label === curr.label) {\n            return curr;\n          }\n          return option;\n        });\n      }\n      return acc;\n    }, []);\n    return choiceCategories;\n  }, [choices, selectedDirection]);\n  const selectedChoices = choices.filter(choice => {\n    const [currentKey] = choice.value.split(' ');\n    return currentKey === selectedValueKey;\n  });\n  const sortButton = /*#__PURE__*/React.createElement(Tooltip, {\n    content: i18n.translate('Polaris.IndexFilters.SortButton.tooltip'),\n    preferredPosition: \"above\",\n    hoverDelay: 400\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"slim\",\n    icon: SortIcon,\n    onClick: handleClick,\n    disabled: disabled,\n    accessibilityLabel: i18n.translate('Polaris.IndexFilters.SortButton.ariaLabel')\n  }));\n  return /*#__PURE__*/React.createElement(Popover, {\n    active: active && !disabled,\n    activator: sortButton,\n    autofocusTarget: \"first-node\",\n    onClose: handleClose,\n    preferredAlignment: \"right\",\n    fluidContent: true\n  }, /*#__PURE__*/React.createElement(Box, {\n    minWidth: \"148px\",\n    paddingInlineStart: \"300\",\n    paddingInlineEnd: \"300\",\n    paddingBlockStart: \"200\",\n    paddingBlockEnd: \"200\",\n    borderBlockEndWidth: \"025\",\n    borderColor: \"border-secondary\"\n  }, /*#__PURE__*/React.createElement(ChoiceList, {\n    title: i18n.translate('Polaris.IndexFilters.SortButton.title'),\n    choices: choiceListChoices,\n    selected: selected,\n    onChange: handleChangeChoiceList\n  })), /*#__PURE__*/React.createElement(Box, {\n    paddingInlineStart: \"150\",\n    paddingInlineEnd: \"150\",\n    paddingBlockStart: \"200\",\n    paddingBlockEnd: \"200\"\n  }, /*#__PURE__*/React.createElement(DirectionButton, {\n    direction: \"asc\",\n    active: selectedDirection === SortButtonDirection.Asc,\n    onClick: handleChangeDirection,\n    value: selectedChoices?.[0]?.value\n  }, selectedChoices?.[0]?.directionLabel), /*#__PURE__*/React.createElement(DirectionButton, {\n    direction: \"desc\",\n    active: selectedDirection === SortButtonDirection.Desc,\n    onClick: handleChangeDirection,\n    value: selectedChoices?.[1]?.value\n  }, selectedChoices?.[1]?.directionLabel)));\n}\n\nexport { SortButton, SortButtonDirection };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
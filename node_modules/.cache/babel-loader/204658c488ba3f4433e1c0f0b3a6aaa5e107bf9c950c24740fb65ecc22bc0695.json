{"ast":null,"code":"import React, { useRef, useReducer, useEffect, useCallback } from 'react';\nimport { ChevronDownIcon, PlusIcon } from '@shopify/polaris-icons';\nimport { classNames } from '../../utilities/css.js';\nimport { useBreakpoints } from '../../utilities/breakpoints.js';\nimport { usePrevious } from '../../utilities/use-previous.js';\nimport { getVisibleAndHiddenTabIndices } from './utilities.js';\nimport styles from './Tabs.css.js';\nimport { Tab } from './components/Tab/Tab.js';\nimport { TabMeasurer } from './components/TabMeasurer/TabMeasurer.js';\nimport { Panel } from './components/Panel/Panel.js';\nimport { List } from './components/List/List.js';\nimport { CreateViewModal } from './components/CreateViewModal/CreateViewModal.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { Text } from '../Text/Text.js';\nimport { Icon } from '../Icon/Icon.js';\nimport { UnstyledButton } from '../UnstyledButton/UnstyledButton.js';\nimport { Box } from '../Box/Box.js';\nimport { Popover } from '../Popover/Popover.js';\nimport { Tooltip } from '../Tooltip/Tooltip.js';\nconst CREATE_NEW_VIEW_ID = 'create-new-view';\nconst Tabs = _ref => {\n  let {\n    tabs,\n    children,\n    selected,\n    newViewAccessibilityLabel,\n    canCreateNewView,\n    disabled,\n    onCreateNewView,\n    onSelect,\n    fitted,\n    disclosureText\n  } = _ref;\n  const i18n = useI18n();\n  const {\n    mdDown\n  } = useBreakpoints();\n  const scrollRef = useRef(null);\n  const wrapRef = useRef(null);\n  const selectedTabRef = useRef(null);\n  const [state, setState] = useReducer((data, partialData) => {\n    return {\n      ...data,\n      ...partialData\n    };\n  }, {\n    disclosureWidth: 0,\n    containerWidth: Infinity,\n    tabWidths: [],\n    visibleTabs: [],\n    hiddenTabs: [],\n    showDisclosure: false,\n    tabToFocus: -1,\n    isNewViewModalActive: false,\n    modalSubmitted: false,\n    isTabsFocused: false,\n    isTabPopoverOpen: false,\n    isTabModalOpen: false\n  });\n  const {\n    tabToFocus,\n    visibleTabs,\n    hiddenTabs,\n    showDisclosure,\n    isNewViewModalActive,\n    modalSubmitted,\n    disclosureWidth,\n    tabWidths,\n    containerWidth,\n    isTabsFocused,\n    isTabModalOpen,\n    isTabPopoverOpen\n  } = state;\n  const prevModalOpen = usePrevious(isTabModalOpen);\n  const prevPopoverOpen = usePrevious(isTabPopoverOpen);\n  useEffect(() => {\n    const hasModalClosed = prevModalOpen && !isTabModalOpen;\n    const hasPopoverClosed = prevPopoverOpen && !isTabPopoverOpen;\n    if (hasModalClosed) {\n      setState({\n        isTabsFocused: true,\n        tabToFocus: selected\n      });\n    } else if (hasPopoverClosed && !isTabModalOpen) {\n      setState({\n        isTabsFocused: true,\n        tabToFocus: selected\n      });\n    }\n  }, [prevPopoverOpen, isTabPopoverOpen, prevModalOpen, isTabModalOpen, selected, tabToFocus]);\n  const handleTogglePopover = useCallback(isOpen => setState({\n    isTabPopoverOpen: isOpen\n  }), []);\n  const handleToggleModal = useCallback(isOpen => setState({\n    isTabModalOpen: isOpen\n  }), []);\n  const handleCloseNewViewModal = () => {\n    setState({\n      isNewViewModalActive: false\n    });\n  };\n  const handleSaveNewViewModal = async value => {\n    if (!onCreateNewView) {\n      return false;\n    }\n    const hasExecuted = await onCreateNewView?.(value);\n    if (hasExecuted) {\n      setState({\n        modalSubmitted: true\n      });\n    }\n    return hasExecuted;\n  };\n  const handleClickNewTab = () => {\n    setState({\n      isNewViewModalActive: true\n    });\n  };\n  const handleTabClick = useCallback(id => {\n    const tab = tabs.find(aTab => aTab.id === id);\n    if (tab == null) {\n      return null;\n    }\n    const selectedIndex = tabs.indexOf(tab);\n    onSelect?.(selectedIndex);\n  }, [tabs, onSelect]);\n  const renderTabMarkup = useCallback((tab, index) => {\n    const handleClick = () => {\n      handleTabClick(tab.id);\n      tab.onAction?.();\n    };\n    const viewNames = tabs.map(_ref2 => {\n      let {\n        content\n      } = _ref2;\n      return content;\n    });\n    const tabPanelID = tab.panelID || `${tab.id}-panel`;\n    return /*#__PURE__*/React.createElement(Tab, Object.assign({}, tab, {\n      key: `${index}-${tab.id}`,\n      id: tab.id,\n      panelID: children ? tabPanelID : undefined,\n      disabled: disabled || tab.disabled,\n      siblingTabHasFocus: tabToFocus > -1,\n      focused: index === tabToFocus,\n      selected: index === selected,\n      onAction: handleClick,\n      accessibilityLabel: tab.accessibilityLabel,\n      url: tab.url,\n      content: tab.content,\n      onToggleModal: handleToggleModal,\n      onTogglePopover: handleTogglePopover,\n      viewNames: viewNames,\n      ref: index === selected ? selectedTabRef : null\n    }));\n  }, [disabled, handleTabClick, tabs, children, selected, tabToFocus, handleToggleModal, handleTogglePopover]);\n  const handleFocus = useCallback(event => {\n    const target = event.target;\n    const isItem = target.classList.contains(styles.Item);\n    const isInNaturalDOMOrder = target.closest(`[data-tabs-focus-catchment]`) || isItem;\n    const isDisclosureActivator = target.classList.contains(styles.DisclosureActivator);\n    if (isDisclosureActivator || !isInNaturalDOMOrder) {\n      return;\n    }\n    setState({\n      isTabsFocused: true\n    });\n  }, []);\n  const handleBlur = useCallback(event => {\n    const target = event.target;\n    const relatedTarget = event.relatedTarget;\n    const isInNaturalDOMOrder = relatedTarget?.closest?.(`.${styles.Tabs}`);\n    const targetIsATab = target?.classList?.contains?.(styles.Tab);\n    const focusReceiverIsAnItem = relatedTarget?.classList.contains(styles.Item);\n    if (!relatedTarget && !isTabModalOpen && !targetIsATab && !focusReceiverIsAnItem) {\n      setState({\n        tabToFocus: -1\n      });\n      return;\n    }\n    if (!isInNaturalDOMOrder && !isTabModalOpen && !targetIsATab && !focusReceiverIsAnItem) {\n      setState({\n        tabToFocus: -1\n      });\n      return;\n    }\n    setState({\n      isTabsFocused: false\n    });\n  }, [isTabModalOpen]);\n  const handleKeyDown = event => {\n    if (isTabPopoverOpen || isTabModalOpen || isNewViewModalActive) {\n      return;\n    }\n    const {\n      key\n    } = event;\n    if (key === 'ArrowLeft' || key === 'ArrowRight') {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n  useEffect(() => {\n    const {\n      visibleTabs,\n      hiddenTabs\n    } = getVisibleAndHiddenTabIndices(tabs, selected, disclosureWidth, tabWidths, containerWidth);\n    setState({\n      visibleTabs,\n      hiddenTabs\n    });\n  }, [containerWidth, disclosureWidth, tabs, selected, tabWidths, setState]);\n  const moveToSelectedTab = useCallback(() => {\n    const activeButton = selectedTabRef.current?.querySelector(`.${styles['Tab-active']}`);\n    if (activeButton) {\n      moveToActiveTab(activeButton.offsetLeft);\n    }\n  }, []);\n  useEffect(() => {\n    if (mdDown) {\n      moveToSelectedTab();\n    }\n  }, [moveToSelectedTab, selected, mdDown]);\n  useEffect(() => {\n    if (isTabsFocused && !showDisclosure) {\n      const tabToFocus = selected;\n      setState({\n        tabToFocus\n      });\n    }\n  }, [isTabsFocused, selected, setState, showDisclosure]);\n  const handleKeyPress = event => {\n    const {\n      showDisclosure,\n      visibleTabs,\n      hiddenTabs,\n      tabToFocus,\n      isNewViewModalActive\n    } = state;\n    if (isTabModalOpen || isTabPopoverOpen || isNewViewModalActive) {\n      return;\n    }\n    const key = event.key;\n    const tabsArrayInOrder = showDisclosure || mdDown ? visibleTabs.concat(hiddenTabs) : [...visibleTabs];\n    let newFocus = tabsArrayInOrder.indexOf(tabToFocus);\n    if (key === 'ArrowRight') {\n      newFocus += 1;\n      if (newFocus === tabsArrayInOrder.length) {\n        newFocus = 0;\n      }\n    }\n    if (key === 'ArrowLeft') {\n      if (newFocus === -1 || newFocus === 0) {\n        newFocus = tabsArrayInOrder.length - 1;\n      } else {\n        newFocus -= 1;\n      }\n    }\n    const buttonToFocus = tabsArrayInOrder[newFocus];\n    if (buttonToFocus != null) {\n      setState({\n        tabToFocus: buttonToFocus\n      });\n    }\n  };\n  const handleDisclosureActivatorClick = () => {\n    setState({\n      showDisclosure: !showDisclosure,\n      tabToFocus: hiddenTabs[0]\n    });\n  };\n  const handleClose = () => {\n    setState({\n      showDisclosure: false\n    });\n  };\n  const handleMeasurement = useCallback(measurements => {\n    const {\n      hiddenTabWidths: tabWidths,\n      containerWidth,\n      disclosureWidth\n    } = measurements;\n    const {\n      visibleTabs,\n      hiddenTabs\n    } = getVisibleAndHiddenTabIndices(tabs, selected, disclosureWidth, tabWidths, containerWidth);\n    setState({\n      visibleTabs,\n      hiddenTabs,\n      disclosureWidth,\n      containerWidth,\n      tabWidths\n    });\n  }, [tabs, selected, setState]);\n  const handleListTabClick = id => {\n    handleTabClick(id);\n    handleClose();\n    setState({\n      isTabsFocused: true\n    });\n  };\n  const moveToActiveTab = offsetLeft => {\n    setTimeout(() => {\n      if (scrollRef.current && typeof scrollRef.current.scroll === 'function') {\n        const scrollRefOffset = wrapRef?.current?.offsetLeft || 0;\n        scrollRef?.current?.scroll({\n          left: offsetLeft - scrollRefOffset\n        });\n      }\n    }, 0);\n  };\n  const createViewA11yLabel = newViewAccessibilityLabel || i18n.translate('Polaris.Tabs.newViewAccessibilityLabel');\n  const tabsToShow = mdDown ? [...visibleTabs, ...hiddenTabs] : visibleTabs;\n  const tabsMarkup = tabsToShow.sort((tabA, tabB) => tabA - tabB).filter(tabIndex => tabs[tabIndex]).map(tabIndex => renderTabMarkup(tabs[tabIndex], tabIndex));\n  const disclosureActivatorVisible = visibleTabs.length < tabs.length && !mdDown;\n  const classname = classNames(styles.Tabs, fitted && styles.fitted, disclosureActivatorVisible && styles.fillSpace);\n  const wrapperClassNames = classNames(styles.Wrapper, canCreateNewView && styles.WrapperWithNewButton);\n  const disclosureTabClassName = classNames(styles.DisclosureTab, disclosureActivatorVisible && styles['DisclosureTab-visible']);\n  const disclosureButtonClassName = classNames(styles.DisclosureActivator);\n  const disclosureButtonContent = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {\n    as: \"span\",\n    variant: \"bodySm\",\n    fontWeight: \"medium\"\n  }, disclosureText ?? i18n.translate('Polaris.Tabs.toggleTabsLabel')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(styles.IconWrap, disclosureActivatorVisible && showDisclosure && styles['IconWrap-open'])\n  }, /*#__PURE__*/React.createElement(Icon, {\n    source: ChevronDownIcon,\n    tone: \"subdued\"\n  })));\n  const disclosureButton = /*#__PURE__*/React.createElement(UnstyledButton, {\n    type: \"button\",\n    className: disclosureButtonClassName,\n    onClick: handleDisclosureActivatorClick,\n    \"aria-label\": disclosureText ?? i18n.translate('Polaris.Tabs.toggleTabsLabel'),\n    disabled: disabled\n  }, disclosureButtonContent);\n  const activator = disclosureButton;\n  const disclosureTabs = hiddenTabs.map(tabIndex => tabs[tabIndex]);\n  const viewNames = tabs.map(_ref3 => {\n    let {\n      content\n    } = _ref3;\n    return content;\n  });\n  const tabMeasurer = /*#__PURE__*/React.createElement(TabMeasurer, {\n    tabToFocus: tabToFocus,\n    activator: activator,\n    selected: selected,\n    tabs: tabs,\n    siblingTabHasFocus: tabToFocus > -1,\n    handleMeasurement: handleMeasurement\n  });\n  const newTab = /*#__PURE__*/React.createElement(Tab, {\n    id: CREATE_NEW_VIEW_ID,\n    content: createViewA11yLabel,\n    actions: [],\n    onAction: handleClickNewTab,\n    onFocus: () => {\n      if (modalSubmitted) {\n        setState({\n          tabToFocus: selected,\n          modalSubmitted: false\n        });\n      }\n    },\n    icon: /*#__PURE__*/React.createElement(Icon, {\n      source: PlusIcon,\n      accessibilityLabel: createViewA11yLabel\n    }),\n    disabled: disabled,\n    onTogglePopover: handleTogglePopover,\n    onToggleModal: handleToggleModal,\n    tabIndexOverride: 0\n  });\n  const panelMarkup = children ? tabs.map((_tab, index) => {\n    return selected === index ? /*#__PURE__*/React.createElement(Panel, {\n      id: tabs[index].panelID || `${tabs[index].id}-panel`,\n      tabID: tabs[index].id,\n      key: tabs[index].id\n    }, children) : /*#__PURE__*/React.createElement(Panel, {\n      id: tabs[index].panelID || `${tabs[index].id}-panel`,\n      tabID: tabs[index].id,\n      key: tabs[index].id,\n      hidden: true\n    });\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Outer\n  }, /*#__PURE__*/React.createElement(Box, {\n    padding: {\n      md: '200'\n    }\n  }, tabMeasurer, /*#__PURE__*/React.createElement(\"div\", {\n    className: wrapperClassNames,\n    ref: scrollRef\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.ButtonWrapper,\n    ref: wrapRef\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    role: tabsMarkup.length > 0 ? 'tablist' : undefined,\n    className: classname,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyPress,\n    \"data-tabs-focus-catchment\": true\n  }, tabsMarkup, mdDown || tabsToShow.length === 0 ? null : /*#__PURE__*/React.createElement(\"li\", {\n    className: disclosureTabClassName,\n    role: \"presentation\"\n  }, /*#__PURE__*/React.createElement(Popover, {\n    preferredPosition: \"below\",\n    preferredAlignment: \"left\",\n    activator: activator,\n    active: disclosureActivatorVisible && showDisclosure,\n    onClose: handleClose,\n    autofocusTarget: \"first-node\"\n  }, /*#__PURE__*/React.createElement(List, {\n    focusIndex: hiddenTabs.indexOf(tabToFocus),\n    disclosureTabs: disclosureTabs,\n    onClick: handleListTabClick,\n    onKeyPress: handleKeyPress\n  })))), canCreateNewView && tabsToShow.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.NewTab\n  }, /*#__PURE__*/React.createElement(CreateViewModal, {\n    open: isNewViewModalActive,\n    onClose: handleCloseNewViewModal,\n    onClickPrimaryAction: handleSaveNewViewModal,\n    viewNames: viewNames,\n    activator: disabled ? newTab : /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Tooltip, {\n      content: i18n.translate('Polaris.Tabs.newViewTooltip'),\n      preferredPosition: \"above\",\n      hoverDelay: 400\n    }, newTab))\n  })) : null))), panelMarkup);\n};\nexport { Tabs };","map":{"version":3,"names":["React","useRef","useReducer","useEffect","useCallback","ChevronDownIcon","PlusIcon","classNames","useBreakpoints","usePrevious","getVisibleAndHiddenTabIndices","styles","Tab","TabMeasurer","Panel","List","CreateViewModal","useI18n","Text","Icon","UnstyledButton","Box","Popover","Tooltip","CREATE_NEW_VIEW_ID","Tabs","_ref","tabs","children","selected","newViewAccessibilityLabel","canCreateNewView","disabled","onCreateNewView","onSelect","fitted","disclosureText","i18n","mdDown","scrollRef","wrapRef","selectedTabRef","state","setState","data","partialData","disclosureWidth","containerWidth","Infinity","tabWidths","visibleTabs","hiddenTabs","showDisclosure","tabToFocus","isNewViewModalActive","modalSubmitted","isTabsFocused","isTabPopoverOpen","isTabModalOpen","prevModalOpen","prevPopoverOpen","hasModalClosed","hasPopoverClosed","handleTogglePopover","isOpen","handleToggleModal","handleCloseNewViewModal","handleSaveNewViewModal","value","hasExecuted","handleClickNewTab","handleTabClick","id","tab","find","aTab","selectedIndex","indexOf","renderTabMarkup","index","handleClick","onAction","viewNames","map","_ref2","content","tabPanelID","panelID","createElement","Object","assign","key","undefined","siblingTabHasFocus","focused","accessibilityLabel","url","onToggleModal","onTogglePopover","ref","handleFocus","event","target","isItem","classList","contains","Item","isInNaturalDOMOrder","closest","isDisclosureActivator","DisclosureActivator","handleBlur","relatedTarget","targetIsATab","focusReceiverIsAnItem","handleKeyDown","preventDefault","stopPropagation","moveToSelectedTab","activeButton","current","querySelector","moveToActiveTab","offsetLeft","handleKeyPress","tabsArrayInOrder","concat","newFocus","length","buttonToFocus","handleDisclosureActivatorClick","handleClose","handleMeasurement","measurements","hiddenTabWidths","handleListTabClick","setTimeout","scroll","scrollRefOffset","left","createViewA11yLabel","translate","tabsToShow","tabsMarkup","sort","tabA","tabB","filter","tabIndex","disclosureActivatorVisible","classname","fillSpace","wrapperClassNames","Wrapper","WrapperWithNewButton","disclosureTabClassName","DisclosureTab","disclosureButtonClassName","disclosureButtonContent","Fragment","as","variant","fontWeight","className","IconWrap","source","tone","disclosureButton","type","onClick","activator","disclosureTabs","_ref3","tabMeasurer","newTab","actions","onFocus","icon","tabIndexOverride","panelMarkup","_tab","tabID","hidden","Outer","padding","md","ButtonWrapper","role","onBlur","onKeyDown","onKeyUp","preferredPosition","preferredAlignment","active","onClose","autofocusTarget","focusIndex","onKeyPress","NewTab","open","onClickPrimaryAction","hoverDelay"],"sources":["/Users/henryspringer/Henry Cursor Folder/revenue-ai-first-hiring/node_modules/@shopify/polaris/build/esm/components/Tabs/Tabs.js"],"sourcesContent":["import React, { useRef, useReducer, useEffect, useCallback } from 'react';\nimport { ChevronDownIcon, PlusIcon } from '@shopify/polaris-icons';\nimport { classNames } from '../../utilities/css.js';\nimport { useBreakpoints } from '../../utilities/breakpoints.js';\nimport { usePrevious } from '../../utilities/use-previous.js';\nimport { getVisibleAndHiddenTabIndices } from './utilities.js';\nimport styles from './Tabs.css.js';\nimport { Tab } from './components/Tab/Tab.js';\nimport { TabMeasurer } from './components/TabMeasurer/TabMeasurer.js';\nimport { Panel } from './components/Panel/Panel.js';\nimport { List } from './components/List/List.js';\nimport { CreateViewModal } from './components/CreateViewModal/CreateViewModal.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { Text } from '../Text/Text.js';\nimport { Icon } from '../Icon/Icon.js';\nimport { UnstyledButton } from '../UnstyledButton/UnstyledButton.js';\nimport { Box } from '../Box/Box.js';\nimport { Popover } from '../Popover/Popover.js';\nimport { Tooltip } from '../Tooltip/Tooltip.js';\n\nconst CREATE_NEW_VIEW_ID = 'create-new-view';\nconst Tabs = ({\n  tabs,\n  children,\n  selected,\n  newViewAccessibilityLabel,\n  canCreateNewView,\n  disabled,\n  onCreateNewView,\n  onSelect,\n  fitted,\n  disclosureText\n}) => {\n  const i18n = useI18n();\n  const {\n    mdDown\n  } = useBreakpoints();\n  const scrollRef = useRef(null);\n  const wrapRef = useRef(null);\n  const selectedTabRef = useRef(null);\n  const [state, setState] = useReducer((data, partialData) => {\n    return {\n      ...data,\n      ...partialData\n    };\n  }, {\n    disclosureWidth: 0,\n    containerWidth: Infinity,\n    tabWidths: [],\n    visibleTabs: [],\n    hiddenTabs: [],\n    showDisclosure: false,\n    tabToFocus: -1,\n    isNewViewModalActive: false,\n    modalSubmitted: false,\n    isTabsFocused: false,\n    isTabPopoverOpen: false,\n    isTabModalOpen: false\n  });\n  const {\n    tabToFocus,\n    visibleTabs,\n    hiddenTabs,\n    showDisclosure,\n    isNewViewModalActive,\n    modalSubmitted,\n    disclosureWidth,\n    tabWidths,\n    containerWidth,\n    isTabsFocused,\n    isTabModalOpen,\n    isTabPopoverOpen\n  } = state;\n  const prevModalOpen = usePrevious(isTabModalOpen);\n  const prevPopoverOpen = usePrevious(isTabPopoverOpen);\n  useEffect(() => {\n    const hasModalClosed = prevModalOpen && !isTabModalOpen;\n    const hasPopoverClosed = prevPopoverOpen && !isTabPopoverOpen;\n    if (hasModalClosed) {\n      setState({\n        isTabsFocused: true,\n        tabToFocus: selected\n      });\n    } else if (hasPopoverClosed && !isTabModalOpen) {\n      setState({\n        isTabsFocused: true,\n        tabToFocus: selected\n      });\n    }\n  }, [prevPopoverOpen, isTabPopoverOpen, prevModalOpen, isTabModalOpen, selected, tabToFocus]);\n  const handleTogglePopover = useCallback(isOpen => setState({\n    isTabPopoverOpen: isOpen\n  }), []);\n  const handleToggleModal = useCallback(isOpen => setState({\n    isTabModalOpen: isOpen\n  }), []);\n  const handleCloseNewViewModal = () => {\n    setState({\n      isNewViewModalActive: false\n    });\n  };\n  const handleSaveNewViewModal = async value => {\n    if (!onCreateNewView) {\n      return false;\n    }\n    const hasExecuted = await onCreateNewView?.(value);\n    if (hasExecuted) {\n      setState({\n        modalSubmitted: true\n      });\n    }\n    return hasExecuted;\n  };\n  const handleClickNewTab = () => {\n    setState({\n      isNewViewModalActive: true\n    });\n  };\n  const handleTabClick = useCallback(id => {\n    const tab = tabs.find(aTab => aTab.id === id);\n    if (tab == null) {\n      return null;\n    }\n    const selectedIndex = tabs.indexOf(tab);\n    onSelect?.(selectedIndex);\n  }, [tabs, onSelect]);\n  const renderTabMarkup = useCallback((tab, index) => {\n    const handleClick = () => {\n      handleTabClick(tab.id);\n      tab.onAction?.();\n    };\n    const viewNames = tabs.map(({\n      content\n    }) => content);\n    const tabPanelID = tab.panelID || `${tab.id}-panel`;\n    return /*#__PURE__*/React.createElement(Tab, Object.assign({}, tab, {\n      key: `${index}-${tab.id}`,\n      id: tab.id,\n      panelID: children ? tabPanelID : undefined,\n      disabled: disabled || tab.disabled,\n      siblingTabHasFocus: tabToFocus > -1,\n      focused: index === tabToFocus,\n      selected: index === selected,\n      onAction: handleClick,\n      accessibilityLabel: tab.accessibilityLabel,\n      url: tab.url,\n      content: tab.content,\n      onToggleModal: handleToggleModal,\n      onTogglePopover: handleTogglePopover,\n      viewNames: viewNames,\n      ref: index === selected ? selectedTabRef : null\n    }));\n  }, [disabled, handleTabClick, tabs, children, selected, tabToFocus, handleToggleModal, handleTogglePopover]);\n  const handleFocus = useCallback(event => {\n    const target = event.target;\n    const isItem = target.classList.contains(styles.Item);\n    const isInNaturalDOMOrder = target.closest(`[data-tabs-focus-catchment]`) || isItem;\n    const isDisclosureActivator = target.classList.contains(styles.DisclosureActivator);\n    if (isDisclosureActivator || !isInNaturalDOMOrder) {\n      return;\n    }\n    setState({\n      isTabsFocused: true\n    });\n  }, []);\n  const handleBlur = useCallback(event => {\n    const target = event.target;\n    const relatedTarget = event.relatedTarget;\n    const isInNaturalDOMOrder = relatedTarget?.closest?.(`.${styles.Tabs}`);\n    const targetIsATab = target?.classList?.contains?.(styles.Tab);\n    const focusReceiverIsAnItem = relatedTarget?.classList.contains(styles.Item);\n    if (!relatedTarget && !isTabModalOpen && !targetIsATab && !focusReceiverIsAnItem) {\n      setState({\n        tabToFocus: -1\n      });\n      return;\n    }\n    if (!isInNaturalDOMOrder && !isTabModalOpen && !targetIsATab && !focusReceiverIsAnItem) {\n      setState({\n        tabToFocus: -1\n      });\n      return;\n    }\n    setState({\n      isTabsFocused: false\n    });\n  }, [isTabModalOpen]);\n  const handleKeyDown = event => {\n    if (isTabPopoverOpen || isTabModalOpen || isNewViewModalActive) {\n      return;\n    }\n    const {\n      key\n    } = event;\n    if (key === 'ArrowLeft' || key === 'ArrowRight') {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n  useEffect(() => {\n    const {\n      visibleTabs,\n      hiddenTabs\n    } = getVisibleAndHiddenTabIndices(tabs, selected, disclosureWidth, tabWidths, containerWidth);\n    setState({\n      visibleTabs,\n      hiddenTabs\n    });\n  }, [containerWidth, disclosureWidth, tabs, selected, tabWidths, setState]);\n  const moveToSelectedTab = useCallback(() => {\n    const activeButton = selectedTabRef.current?.querySelector(`.${styles['Tab-active']}`);\n    if (activeButton) {\n      moveToActiveTab(activeButton.offsetLeft);\n    }\n  }, []);\n  useEffect(() => {\n    if (mdDown) {\n      moveToSelectedTab();\n    }\n  }, [moveToSelectedTab, selected, mdDown]);\n  useEffect(() => {\n    if (isTabsFocused && !showDisclosure) {\n      const tabToFocus = selected;\n      setState({\n        tabToFocus\n      });\n    }\n  }, [isTabsFocused, selected, setState, showDisclosure]);\n  const handleKeyPress = event => {\n    const {\n      showDisclosure,\n      visibleTabs,\n      hiddenTabs,\n      tabToFocus,\n      isNewViewModalActive\n    } = state;\n    if (isTabModalOpen || isTabPopoverOpen || isNewViewModalActive) {\n      return;\n    }\n    const key = event.key;\n    const tabsArrayInOrder = showDisclosure || mdDown ? visibleTabs.concat(hiddenTabs) : [...visibleTabs];\n    let newFocus = tabsArrayInOrder.indexOf(tabToFocus);\n    if (key === 'ArrowRight') {\n      newFocus += 1;\n      if (newFocus === tabsArrayInOrder.length) {\n        newFocus = 0;\n      }\n    }\n    if (key === 'ArrowLeft') {\n      if (newFocus === -1 || newFocus === 0) {\n        newFocus = tabsArrayInOrder.length - 1;\n      } else {\n        newFocus -= 1;\n      }\n    }\n    const buttonToFocus = tabsArrayInOrder[newFocus];\n    if (buttonToFocus != null) {\n      setState({\n        tabToFocus: buttonToFocus\n      });\n    }\n  };\n  const handleDisclosureActivatorClick = () => {\n    setState({\n      showDisclosure: !showDisclosure,\n      tabToFocus: hiddenTabs[0]\n    });\n  };\n  const handleClose = () => {\n    setState({\n      showDisclosure: false\n    });\n  };\n  const handleMeasurement = useCallback(measurements => {\n    const {\n      hiddenTabWidths: tabWidths,\n      containerWidth,\n      disclosureWidth\n    } = measurements;\n    const {\n      visibleTabs,\n      hiddenTabs\n    } = getVisibleAndHiddenTabIndices(tabs, selected, disclosureWidth, tabWidths, containerWidth);\n    setState({\n      visibleTabs,\n      hiddenTabs,\n      disclosureWidth,\n      containerWidth,\n      tabWidths\n    });\n  }, [tabs, selected, setState]);\n  const handleListTabClick = id => {\n    handleTabClick(id);\n    handleClose();\n    setState({\n      isTabsFocused: true\n    });\n  };\n  const moveToActiveTab = offsetLeft => {\n    setTimeout(() => {\n      if (scrollRef.current && typeof scrollRef.current.scroll === 'function') {\n        const scrollRefOffset = wrapRef?.current?.offsetLeft || 0;\n        scrollRef?.current?.scroll({\n          left: offsetLeft - scrollRefOffset\n        });\n      }\n    }, 0);\n  };\n  const createViewA11yLabel = newViewAccessibilityLabel || i18n.translate('Polaris.Tabs.newViewAccessibilityLabel');\n  const tabsToShow = mdDown ? [...visibleTabs, ...hiddenTabs] : visibleTabs;\n  const tabsMarkup = tabsToShow.sort((tabA, tabB) => tabA - tabB).filter(tabIndex => tabs[tabIndex]).map(tabIndex => renderTabMarkup(tabs[tabIndex], tabIndex));\n  const disclosureActivatorVisible = visibleTabs.length < tabs.length && !mdDown;\n  const classname = classNames(styles.Tabs, fitted && styles.fitted, disclosureActivatorVisible && styles.fillSpace);\n  const wrapperClassNames = classNames(styles.Wrapper, canCreateNewView && styles.WrapperWithNewButton);\n  const disclosureTabClassName = classNames(styles.DisclosureTab, disclosureActivatorVisible && styles['DisclosureTab-visible']);\n  const disclosureButtonClassName = classNames(styles.DisclosureActivator);\n  const disclosureButtonContent = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {\n    as: \"span\",\n    variant: \"bodySm\",\n    fontWeight: \"medium\"\n  }, disclosureText ?? i18n.translate('Polaris.Tabs.toggleTabsLabel')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(styles.IconWrap, disclosureActivatorVisible && showDisclosure && styles['IconWrap-open'])\n  }, /*#__PURE__*/React.createElement(Icon, {\n    source: ChevronDownIcon,\n    tone: \"subdued\"\n  })));\n  const disclosureButton = /*#__PURE__*/React.createElement(UnstyledButton, {\n    type: \"button\",\n    className: disclosureButtonClassName,\n    onClick: handleDisclosureActivatorClick,\n    \"aria-label\": disclosureText ?? i18n.translate('Polaris.Tabs.toggleTabsLabel'),\n    disabled: disabled\n  }, disclosureButtonContent);\n  const activator = disclosureButton;\n  const disclosureTabs = hiddenTabs.map(tabIndex => tabs[tabIndex]);\n  const viewNames = tabs.map(({\n    content\n  }) => content);\n  const tabMeasurer = /*#__PURE__*/React.createElement(TabMeasurer, {\n    tabToFocus: tabToFocus,\n    activator: activator,\n    selected: selected,\n    tabs: tabs,\n    siblingTabHasFocus: tabToFocus > -1,\n    handleMeasurement: handleMeasurement\n  });\n  const newTab = /*#__PURE__*/React.createElement(Tab, {\n    id: CREATE_NEW_VIEW_ID,\n    content: createViewA11yLabel,\n    actions: [],\n    onAction: handleClickNewTab,\n    onFocus: () => {\n      if (modalSubmitted) {\n        setState({\n          tabToFocus: selected,\n          modalSubmitted: false\n        });\n      }\n    },\n    icon: /*#__PURE__*/React.createElement(Icon, {\n      source: PlusIcon,\n      accessibilityLabel: createViewA11yLabel\n    }),\n    disabled: disabled,\n    onTogglePopover: handleTogglePopover,\n    onToggleModal: handleToggleModal,\n    tabIndexOverride: 0\n  });\n  const panelMarkup = children ? tabs.map((_tab, index) => {\n    return selected === index ? /*#__PURE__*/React.createElement(Panel, {\n      id: tabs[index].panelID || `${tabs[index].id}-panel`,\n      tabID: tabs[index].id,\n      key: tabs[index].id\n    }, children) : /*#__PURE__*/React.createElement(Panel, {\n      id: tabs[index].panelID || `${tabs[index].id}-panel`,\n      tabID: tabs[index].id,\n      key: tabs[index].id,\n      hidden: true\n    });\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Outer\n  }, /*#__PURE__*/React.createElement(Box, {\n    padding: {\n      md: '200'\n    }\n  }, tabMeasurer, /*#__PURE__*/React.createElement(\"div\", {\n    className: wrapperClassNames,\n    ref: scrollRef\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.ButtonWrapper,\n    ref: wrapRef\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    role: tabsMarkup.length > 0 ? 'tablist' : undefined,\n    className: classname,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyPress,\n    \"data-tabs-focus-catchment\": true\n  }, tabsMarkup, mdDown || tabsToShow.length === 0 ? null : /*#__PURE__*/React.createElement(\"li\", {\n    className: disclosureTabClassName,\n    role: \"presentation\"\n  }, /*#__PURE__*/React.createElement(Popover, {\n    preferredPosition: \"below\",\n    preferredAlignment: \"left\",\n    activator: activator,\n    active: disclosureActivatorVisible && showDisclosure,\n    onClose: handleClose,\n    autofocusTarget: \"first-node\"\n  }, /*#__PURE__*/React.createElement(List, {\n    focusIndex: hiddenTabs.indexOf(tabToFocus),\n    disclosureTabs: disclosureTabs,\n    onClick: handleListTabClick,\n    onKeyPress: handleKeyPress\n  })))), canCreateNewView && tabsToShow.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.NewTab\n  }, /*#__PURE__*/React.createElement(CreateViewModal, {\n    open: isNewViewModalActive,\n    onClose: handleCloseNewViewModal,\n    onClickPrimaryAction: handleSaveNewViewModal,\n    viewNames: viewNames,\n    activator: disabled ? newTab : /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Tooltip, {\n      content: i18n.translate('Polaris.Tabs.newViewTooltip'),\n      preferredPosition: \"above\",\n      hoverDelay: 400\n    }, newTab))\n  })) : null))), panelMarkup);\n};\n\nexport { Tabs };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
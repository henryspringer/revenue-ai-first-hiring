{"ast":null,"code":"import React, { forwardRef, useState, useRef, useEffect, useCallback } from 'react';\nimport { InfoIcon, DuplicateIcon, EditIcon, LayoutColumns3Icon, DeleteIcon, ChevronDownIcon } from '@shopify/polaris-icons';\nimport { classNames } from '../../../../utilities/css.js';\nimport { focusFirstFocusableNode, handleMouseUpByBlurring } from '../../../../utilities/focus.js';\nimport styles from '../../Tabs.css.js';\nimport { DuplicateModal } from './components/DuplicateModal/DuplicateModal.js';\nimport { RenameModal } from './components/RenameModal/RenameModal.js';\nimport { useI18n } from '../../../../utilities/i18n/hooks.js';\nimport { Icon } from '../../../Icon/Icon.js';\nimport { Modal } from '../../../Modal/Modal.js';\nimport { Popover } from '../../../Popover/Popover.js';\nimport { ActionList } from '../../../ActionList/ActionList.js';\nimport { InlineStack } from '../../../InlineStack/InlineStack.js';\nimport { Text } from '../../../Text/Text.js';\nimport { UnstyledLink } from '../../../UnstyledLink/UnstyledLink.js';\nimport { UnstyledButton } from '../../../UnstyledButton/UnstyledButton.js';\nimport { Badge } from '../../../Badge/Badge.js';\nconst Tab = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    content,\n    accessibilityLabel,\n    badge,\n    id,\n    panelID,\n    url,\n    onAction,\n    actions,\n    disabled,\n    isModalLoading,\n    icon,\n    siblingTabHasFocus,\n    measuring,\n    focused,\n    selected,\n    onToggleModal,\n    onTogglePopover,\n    viewNames,\n    tabIndexOverride,\n    onFocus\n  } = _ref;\n  const i18n = useI18n();\n  const [popoverActive, setPopoverActive] = useState(false);\n  const [activeModalType, setActiveModalType] = useState(null);\n  const wasSelected = useRef(selected);\n  const panelFocused = useRef(false);\n  const node = useRef(null);\n  useEffect(() => {\n    onTogglePopover(popoverActive);\n  }, [popoverActive, onTogglePopover]);\n  useEffect(() => {\n    onToggleModal(Boolean(activeModalType));\n  }, [activeModalType, onToggleModal]);\n  useEffect(() => {\n    return () => {\n      onToggleModal(false);\n      onTogglePopover(false);\n    };\n  }, [onToggleModal, onTogglePopover]);\n\n  // A tab can start selected when it is moved from the disclosure dropdown into the main list, so we need to send focus from the tab to the panel on mount and update\n  useEffect(() => {\n    if (measuring) {\n      return;\n    }\n\n    // Because of timing issues with the render, we may still have the old, in-disclosure version of the tab that has focus. Check for this as a second indicator of focus\n    const itemHadFocus = focused || document.activeElement && document.activeElement.id === id;\n\n    // If we just check for selected, the panel for the active tab will be focused on page load, which we donâ€™t want\n    if (itemHadFocus && selected && panelID != null && !panelFocused.current) {\n      focusPanelID(panelID);\n      panelFocused.current = true;\n    }\n    if (selected && !wasSelected.current && panelID != null) {\n      focusPanelID(panelID);\n    } else if (focused && node.current != null && activeModalType == null && !disabled) {\n      focusFirstFocusableNode(node.current);\n    }\n    wasSelected.current = selected;\n  }, [focused, id, content, measuring, panelID, selected, activeModalType, disabled]);\n  let tabIndex;\n  if (selected && !siblingTabHasFocus && !measuring) {\n    tabIndex = 0;\n  } else if (focused && !measuring) {\n    tabIndex = 0;\n  } else {\n    tabIndex = -1;\n  }\n  if (tabIndexOverride != null) {\n    tabIndex = tabIndexOverride;\n  }\n  const renameAction = actions?.find(action => action.type === 'rename');\n  const duplicateAction = actions?.find(action => action.type === 'duplicate');\n  const deleteAction = actions?.find(action => action.type === 'delete');\n  const togglePopoverActive = useCallback(() => {\n    if (!actions?.length) {\n      return;\n    }\n    setPopoverActive(popoverActive => !popoverActive);\n  }, [actions]);\n  const handleClick = useCallback(() => {\n    if (disabled) {\n      return;\n    }\n    if (selected) {\n      togglePopoverActive();\n    } else {\n      onAction?.();\n    }\n  }, [selected, onAction, togglePopoverActive, disabled]);\n  const handleModalOpen = type => {\n    setActiveModalType(type);\n  };\n  const handleModalClose = () => {\n    setActiveModalType(null);\n  };\n  const handleSaveRenameModal = useCallback(async value => {\n    await renameAction?.onPrimaryAction?.(value);\n    setTimeout(() => {\n      if (node.current) {\n        focusFirstFocusableNode(node.current);\n      }\n    }, 250);\n  }, [renameAction]);\n  const handleConfirmDeleteView = useCallback(async () => {\n    await deleteAction?.onPrimaryAction?.(content);\n    handleModalClose();\n  }, [deleteAction, content]);\n  const handleSaveDuplicateModal = useCallback(async duplicateName => {\n    await duplicateAction?.onPrimaryAction?.(duplicateName);\n  }, [duplicateAction]);\n  const actionContent = {\n    rename: {\n      icon: InfoIcon,\n      content: i18n.translate('Polaris.Tabs.Tab.rename')\n    },\n    duplicate: {\n      icon: DuplicateIcon,\n      content: i18n.translate('Polaris.Tabs.Tab.duplicate')\n    },\n    edit: {\n      icon: EditIcon,\n      content: i18n.translate('Polaris.Tabs.Tab.edit')\n    },\n    'edit-columns': {\n      icon: LayoutColumns3Icon,\n      content: i18n.translate('Polaris.Tabs.Tab.editColumns')\n    },\n    delete: {\n      icon: DeleteIcon,\n      content: i18n.translate('Polaris.Tabs.Tab.delete'),\n      destructive: true\n    }\n  };\n  const formattedActions = actions?.map(_ref2 => {\n    let {\n      type,\n      onAction,\n      onPrimaryAction,\n      ...additionalOptions\n    } = _ref2;\n    const isModalActivator = !type.includes('edit');\n    return {\n      ...actionContent[type],\n      ...additionalOptions,\n      onAction: () => {\n        onAction?.(content);\n        togglePopoverActive();\n        if (isModalActivator) {\n          handleModalOpen(type);\n        }\n      }\n    };\n  });\n  const handleKeyDown = useCallback(event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick();\n    }\n  }, [handleClick]);\n  const tabContainerClassNames = classNames(styles.TabContainer, selected && styles.Underline);\n  const urlIfNotDisabledOrSelected = disabled || selected ? undefined : url;\n  const BaseComponent = urlIfNotDisabledOrSelected ? UnstyledLink : UnstyledButton;\n  const tabClassName = classNames(styles.Tab, icon && styles['Tab-iconOnly'], popoverActive && styles['Tab-popoverActive'], selected && styles['Tab-active'], selected && actions?.length && styles['Tab-hasActions']);\n  const badgeMarkup = badge ? /*#__PURE__*/React.createElement(Badge, {\n    tone: selected ? undefined : 'new'\n  }, badge) : null;\n  const disclosureMarkup = selected && actions?.length ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(styles.IconWrap)\n  }, /*#__PURE__*/React.createElement(Icon, {\n    source: ChevronDownIcon\n  })) : null;\n  const activator = /*#__PURE__*/React.createElement(BaseComponent, {\n    id: id,\n    className: tabClassName,\n    tabIndex: tabIndex,\n    \"aria-selected\": selected,\n    \"aria-controls\": panelID,\n    \"aria-label\": accessibilityLabel,\n    role: tabIndexOverride == null ? 'tab' : undefined,\n    disabled: disabled,\n    url: urlIfNotDisabledOrSelected,\n    onFocus: onFocus,\n    onMouseUp: handleMouseUpByBlurring,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, /*#__PURE__*/React.createElement(InlineStack, {\n    gap: \"200\",\n    align: \"center\",\n    blockAlign: \"center\",\n    wrap: false\n  }, /*#__PURE__*/React.createElement(Text, {\n    as: \"span\",\n    variant: \"bodySm\",\n    fontWeight: \"medium\"\n  }, icon ?? content), badgeMarkup), disclosureMarkup);\n  const isPlainButton = !selected || !actions?.length;\n  const renameModal = renameAction ? /*#__PURE__*/React.createElement(RenameModal, {\n    name: content,\n    open: activeModalType === 'rename',\n    onClose: handleModalClose,\n    onClickPrimaryAction: handleSaveRenameModal,\n    isModalLoading: isModalLoading,\n    viewNames: viewNames\n  }) : null;\n  const duplicateModal = duplicateAction ? /*#__PURE__*/React.createElement(DuplicateModal, {\n    open: activeModalType === 'duplicate',\n    name: i18n.translate('Polaris.Tabs.Tab.copy', {\n      name: content\n    }),\n    onClose: handleModalClose,\n    onClickPrimaryAction: handleSaveDuplicateModal,\n    isModalLoading: isModalLoading,\n    viewNames: viewNames || []\n  }) : null;\n  const deleteModal = deleteAction ? /*#__PURE__*/React.createElement(Modal, {\n    open: activeModalType === 'delete',\n    onClose: handleModalClose,\n    primaryAction: {\n      content: i18n.translate('Polaris.Tabs.Tab.deleteModal.delete'),\n      onAction: handleConfirmDeleteView,\n      destructive: true,\n      disabled: isModalLoading\n    },\n    secondaryActions: [{\n      content: i18n.translate('Polaris.Tabs.Tab.deleteModal.cancel'),\n      onAction: handleModalClose\n    }],\n    title: i18n.translate('Polaris.Tabs.Tab.deleteModal.title'),\n    instant: true\n  }, /*#__PURE__*/React.createElement(Modal.Section, null, i18n.translate('Polaris.Tabs.Tab.deleteModal.description', {\n    viewName: content\n  }))) : null;\n  const markup = isPlainButton || disabled ? activator : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Popover, {\n    active: popoverActive,\n    activator: activator,\n    autofocusTarget: \"first-node\",\n    onClose: togglePopoverActive\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.ActionListWrap\n  }, /*#__PURE__*/React.createElement(ActionList, {\n    actionRole: \"menuitem\",\n    items: formattedActions\n  }))), renameModal, duplicateModal, deleteModal);\n  if (icon) {\n    return markup;\n  }\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: tabContainerClassNames,\n    ref: mergeRefs([node, ref]),\n    role: \"presentation\"\n  }, markup);\n});\nTab.displayName = 'Tab';\nfunction focusPanelID(panelID) {\n  const panel = document.getElementById(panelID);\n  if (panel) {\n    panel.focus({\n      preventScroll: true\n    });\n  }\n}\nfunction mergeRefs(refs) {\n  return node => {\n    for (const ref of refs) {\n      if (ref != null) {\n        ref.current = node;\n      }\n    }\n  };\n}\nexport { Tab };","map":{"version":3,"names":["React","forwardRef","useState","useRef","useEffect","useCallback","InfoIcon","DuplicateIcon","EditIcon","LayoutColumns3Icon","DeleteIcon","ChevronDownIcon","classNames","focusFirstFocusableNode","handleMouseUpByBlurring","styles","DuplicateModal","RenameModal","useI18n","Icon","Modal","Popover","ActionList","InlineStack","Text","UnstyledLink","UnstyledButton","Badge","Tab","_ref","ref","content","accessibilityLabel","badge","id","panelID","url","onAction","actions","disabled","isModalLoading","icon","siblingTabHasFocus","measuring","focused","selected","onToggleModal","onTogglePopover","viewNames","tabIndexOverride","onFocus","i18n","popoverActive","setPopoverActive","activeModalType","setActiveModalType","wasSelected","panelFocused","node","Boolean","itemHadFocus","document","activeElement","current","focusPanelID","tabIndex","renameAction","find","action","type","duplicateAction","deleteAction","togglePopoverActive","length","handleClick","handleModalOpen","handleModalClose","handleSaveRenameModal","value","onPrimaryAction","setTimeout","handleConfirmDeleteView","handleSaveDuplicateModal","duplicateName","actionContent","rename","translate","duplicate","edit","delete","destructive","formattedActions","map","_ref2","additionalOptions","isModalActivator","includes","handleKeyDown","event","key","preventDefault","tabContainerClassNames","TabContainer","Underline","urlIfNotDisabledOrSelected","undefined","BaseComponent","tabClassName","badgeMarkup","createElement","tone","disclosureMarkup","className","IconWrap","source","activator","role","onMouseUp","onClick","onKeyDown","gap","align","blockAlign","wrap","as","variant","fontWeight","isPlainButton","renameModal","name","open","onClose","onClickPrimaryAction","duplicateModal","deleteModal","primaryAction","secondaryActions","title","instant","Section","viewName","markup","Fragment","active","autofocusTarget","ActionListWrap","actionRole","items","mergeRefs","displayName","panel","getElementById","focus","preventScroll","refs"],"sources":["/Users/henryspringer/Henry Cursor Folder/revenue-ai-dashboard/node_modules/@shopify/polaris/build/esm/components/Tabs/components/Tab/Tab.js"],"sourcesContent":["import React, { forwardRef, useState, useRef, useEffect, useCallback } from 'react';\nimport { InfoIcon, DuplicateIcon, EditIcon, LayoutColumns3Icon, DeleteIcon, ChevronDownIcon } from '@shopify/polaris-icons';\nimport { classNames } from '../../../../utilities/css.js';\nimport { focusFirstFocusableNode, handleMouseUpByBlurring } from '../../../../utilities/focus.js';\nimport styles from '../../Tabs.css.js';\nimport { DuplicateModal } from './components/DuplicateModal/DuplicateModal.js';\nimport { RenameModal } from './components/RenameModal/RenameModal.js';\nimport { useI18n } from '../../../../utilities/i18n/hooks.js';\nimport { Icon } from '../../../Icon/Icon.js';\nimport { Modal } from '../../../Modal/Modal.js';\nimport { Popover } from '../../../Popover/Popover.js';\nimport { ActionList } from '../../../ActionList/ActionList.js';\nimport { InlineStack } from '../../../InlineStack/InlineStack.js';\nimport { Text } from '../../../Text/Text.js';\nimport { UnstyledLink } from '../../../UnstyledLink/UnstyledLink.js';\nimport { UnstyledButton } from '../../../UnstyledButton/UnstyledButton.js';\nimport { Badge } from '../../../Badge/Badge.js';\n\nconst Tab = /*#__PURE__*/forwardRef(({\n  content,\n  accessibilityLabel,\n  badge,\n  id,\n  panelID,\n  url,\n  onAction,\n  actions,\n  disabled,\n  isModalLoading,\n  icon,\n  siblingTabHasFocus,\n  measuring,\n  focused,\n  selected,\n  onToggleModal,\n  onTogglePopover,\n  viewNames,\n  tabIndexOverride,\n  onFocus\n}, ref) => {\n  const i18n = useI18n();\n  const [popoverActive, setPopoverActive] = useState(false);\n  const [activeModalType, setActiveModalType] = useState(null);\n  const wasSelected = useRef(selected);\n  const panelFocused = useRef(false);\n  const node = useRef(null);\n  useEffect(() => {\n    onTogglePopover(popoverActive);\n  }, [popoverActive, onTogglePopover]);\n  useEffect(() => {\n    onToggleModal(Boolean(activeModalType));\n  }, [activeModalType, onToggleModal]);\n  useEffect(() => {\n    return () => {\n      onToggleModal(false);\n      onTogglePopover(false);\n    };\n  }, [onToggleModal, onTogglePopover]);\n\n  // A tab can start selected when it is moved from the disclosure dropdown into the main list, so we need to send focus from the tab to the panel on mount and update\n  useEffect(() => {\n    if (measuring) {\n      return;\n    }\n\n    // Because of timing issues with the render, we may still have the old, in-disclosure version of the tab that has focus. Check for this as a second indicator of focus\n    const itemHadFocus = focused || document.activeElement && document.activeElement.id === id;\n\n    // If we just check for selected, the panel for the active tab will be focused on page load, which we donâ€™t want\n    if (itemHadFocus && selected && panelID != null && !panelFocused.current) {\n      focusPanelID(panelID);\n      panelFocused.current = true;\n    }\n    if (selected && !wasSelected.current && panelID != null) {\n      focusPanelID(panelID);\n    } else if (focused && node.current != null && activeModalType == null && !disabled) {\n      focusFirstFocusableNode(node.current);\n    }\n    wasSelected.current = selected;\n  }, [focused, id, content, measuring, panelID, selected, activeModalType, disabled]);\n  let tabIndex;\n  if (selected && !siblingTabHasFocus && !measuring) {\n    tabIndex = 0;\n  } else if (focused && !measuring) {\n    tabIndex = 0;\n  } else {\n    tabIndex = -1;\n  }\n  if (tabIndexOverride != null) {\n    tabIndex = tabIndexOverride;\n  }\n  const renameAction = actions?.find(action => action.type === 'rename');\n  const duplicateAction = actions?.find(action => action.type === 'duplicate');\n  const deleteAction = actions?.find(action => action.type === 'delete');\n  const togglePopoverActive = useCallback(() => {\n    if (!actions?.length) {\n      return;\n    }\n    setPopoverActive(popoverActive => !popoverActive);\n  }, [actions]);\n  const handleClick = useCallback(() => {\n    if (disabled) {\n      return;\n    }\n    if (selected) {\n      togglePopoverActive();\n    } else {\n      onAction?.();\n    }\n  }, [selected, onAction, togglePopoverActive, disabled]);\n  const handleModalOpen = type => {\n    setActiveModalType(type);\n  };\n  const handleModalClose = () => {\n    setActiveModalType(null);\n  };\n  const handleSaveRenameModal = useCallback(async value => {\n    await renameAction?.onPrimaryAction?.(value);\n    setTimeout(() => {\n      if (node.current) {\n        focusFirstFocusableNode(node.current);\n      }\n    }, 250);\n  }, [renameAction]);\n  const handleConfirmDeleteView = useCallback(async () => {\n    await deleteAction?.onPrimaryAction?.(content);\n    handleModalClose();\n  }, [deleteAction, content]);\n  const handleSaveDuplicateModal = useCallback(async duplicateName => {\n    await duplicateAction?.onPrimaryAction?.(duplicateName);\n  }, [duplicateAction]);\n  const actionContent = {\n    rename: {\n      icon: InfoIcon,\n      content: i18n.translate('Polaris.Tabs.Tab.rename')\n    },\n    duplicate: {\n      icon: DuplicateIcon,\n      content: i18n.translate('Polaris.Tabs.Tab.duplicate')\n    },\n    edit: {\n      icon: EditIcon,\n      content: i18n.translate('Polaris.Tabs.Tab.edit')\n    },\n    'edit-columns': {\n      icon: LayoutColumns3Icon,\n      content: i18n.translate('Polaris.Tabs.Tab.editColumns')\n    },\n    delete: {\n      icon: DeleteIcon,\n      content: i18n.translate('Polaris.Tabs.Tab.delete'),\n      destructive: true\n    }\n  };\n  const formattedActions = actions?.map(({\n    type,\n    onAction,\n    onPrimaryAction,\n    ...additionalOptions\n  }) => {\n    const isModalActivator = !type.includes('edit');\n    return {\n      ...actionContent[type],\n      ...additionalOptions,\n      onAction: () => {\n        onAction?.(content);\n        togglePopoverActive();\n        if (isModalActivator) {\n          handleModalOpen(type);\n        }\n      }\n    };\n  });\n  const handleKeyDown = useCallback(event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick();\n    }\n  }, [handleClick]);\n  const tabContainerClassNames = classNames(styles.TabContainer, selected && styles.Underline);\n  const urlIfNotDisabledOrSelected = disabled || selected ? undefined : url;\n  const BaseComponent = urlIfNotDisabledOrSelected ? UnstyledLink : UnstyledButton;\n  const tabClassName = classNames(styles.Tab, icon && styles['Tab-iconOnly'], popoverActive && styles['Tab-popoverActive'], selected && styles['Tab-active'], selected && actions?.length && styles['Tab-hasActions']);\n  const badgeMarkup = badge ? /*#__PURE__*/React.createElement(Badge, {\n    tone: selected ? undefined : 'new'\n  }, badge) : null;\n  const disclosureMarkup = selected && actions?.length ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(styles.IconWrap)\n  }, /*#__PURE__*/React.createElement(Icon, {\n    source: ChevronDownIcon\n  })) : null;\n  const activator = /*#__PURE__*/React.createElement(BaseComponent, {\n    id: id,\n    className: tabClassName,\n    tabIndex: tabIndex,\n    \"aria-selected\": selected,\n    \"aria-controls\": panelID,\n    \"aria-label\": accessibilityLabel,\n    role: tabIndexOverride == null ? 'tab' : undefined,\n    disabled: disabled,\n    url: urlIfNotDisabledOrSelected,\n    onFocus: onFocus,\n    onMouseUp: handleMouseUpByBlurring,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, /*#__PURE__*/React.createElement(InlineStack, {\n    gap: \"200\",\n    align: \"center\",\n    blockAlign: \"center\",\n    wrap: false\n  }, /*#__PURE__*/React.createElement(Text, {\n    as: \"span\",\n    variant: \"bodySm\",\n    fontWeight: \"medium\"\n  }, icon ?? content), badgeMarkup), disclosureMarkup);\n  const isPlainButton = !selected || !actions?.length;\n  const renameModal = renameAction ? /*#__PURE__*/React.createElement(RenameModal, {\n    name: content,\n    open: activeModalType === 'rename',\n    onClose: handleModalClose,\n    onClickPrimaryAction: handleSaveRenameModal,\n    isModalLoading: isModalLoading,\n    viewNames: viewNames\n  }) : null;\n  const duplicateModal = duplicateAction ? /*#__PURE__*/React.createElement(DuplicateModal, {\n    open: activeModalType === 'duplicate',\n    name: i18n.translate('Polaris.Tabs.Tab.copy', {\n      name: content\n    }),\n    onClose: handleModalClose,\n    onClickPrimaryAction: handleSaveDuplicateModal,\n    isModalLoading: isModalLoading,\n    viewNames: viewNames || []\n  }) : null;\n  const deleteModal = deleteAction ? /*#__PURE__*/React.createElement(Modal, {\n    open: activeModalType === 'delete',\n    onClose: handleModalClose,\n    primaryAction: {\n      content: i18n.translate('Polaris.Tabs.Tab.deleteModal.delete'),\n      onAction: handleConfirmDeleteView,\n      destructive: true,\n      disabled: isModalLoading\n    },\n    secondaryActions: [{\n      content: i18n.translate('Polaris.Tabs.Tab.deleteModal.cancel'),\n      onAction: handleModalClose\n    }],\n    title: i18n.translate('Polaris.Tabs.Tab.deleteModal.title'),\n    instant: true\n  }, /*#__PURE__*/React.createElement(Modal.Section, null, i18n.translate('Polaris.Tabs.Tab.deleteModal.description', {\n    viewName: content\n  }))) : null;\n  const markup = isPlainButton || disabled ? activator : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Popover, {\n    active: popoverActive,\n    activator: activator,\n    autofocusTarget: \"first-node\",\n    onClose: togglePopoverActive\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.ActionListWrap\n  }, /*#__PURE__*/React.createElement(ActionList, {\n    actionRole: \"menuitem\",\n    items: formattedActions\n  }))), renameModal, duplicateModal, deleteModal);\n  if (icon) {\n    return markup;\n  }\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: tabContainerClassNames,\n    ref: mergeRefs([node, ref]),\n    role: \"presentation\"\n  }, markup);\n});\nTab.displayName = 'Tab';\nfunction focusPanelID(panelID) {\n  const panel = document.getElementById(panelID);\n  if (panel) {\n    panel.focus({\n      preventScroll: true\n    });\n  }\n}\nfunction mergeRefs(refs) {\n  return node => {\n    for (const ref of refs) {\n      if (ref != null) {\n        ref.current = node;\n      }\n    }\n  };\n}\n\nexport { Tab };\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACnF,SAASC,QAAQ,EAAEC,aAAa,EAAEC,QAAQ,EAAEC,kBAAkB,EAAEC,UAAU,EAAEC,eAAe,QAAQ,wBAAwB;AAC3H,SAASC,UAAU,QAAQ,8BAA8B;AACzD,SAASC,uBAAuB,EAAEC,uBAAuB,QAAQ,gCAAgC;AACjG,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,cAAc,QAAQ,+CAA+C;AAC9E,SAASC,WAAW,QAAQ,yCAAyC;AACrE,SAASC,OAAO,QAAQ,qCAAqC;AAC7D,SAASC,IAAI,QAAQ,uBAAuB;AAC5C,SAASC,KAAK,QAAQ,yBAAyB;AAC/C,SAASC,OAAO,QAAQ,6BAA6B;AACrD,SAASC,UAAU,QAAQ,mCAAmC;AAC9D,SAASC,WAAW,QAAQ,qCAAqC;AACjE,SAASC,IAAI,QAAQ,uBAAuB;AAC5C,SAASC,YAAY,QAAQ,uCAAuC;AACpE,SAASC,cAAc,QAAQ,2CAA2C;AAC1E,SAASC,KAAK,QAAQ,yBAAyB;AAE/C,MAAMC,GAAG,GAAG,aAAa3B,UAAU,CAAC,CAAA4B,IAAA,EAqBjCC,GAAG,KAAK;EAAA,IArB0B;IACnCC,OAAO;IACPC,kBAAkB;IAClBC,KAAK;IACLC,EAAE;IACFC,OAAO;IACPC,GAAG;IACHC,QAAQ;IACRC,OAAO;IACPC,QAAQ;IACRC,cAAc;IACdC,IAAI;IACJC,kBAAkB;IAClBC,SAAS;IACTC,OAAO;IACPC,QAAQ;IACRC,aAAa;IACbC,eAAe;IACfC,SAAS;IACTC,gBAAgB;IAChBC;EACF,CAAC,GAAArB,IAAA;EACC,MAAMsB,IAAI,GAAGjC,OAAO,CAAC,CAAC;EACtB,MAAM,CAACkC,aAAa,EAAEC,gBAAgB,CAAC,GAAGnD,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACoD,eAAe,EAAEC,kBAAkB,CAAC,GAAGrD,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAMsD,WAAW,GAAGrD,MAAM,CAAC0C,QAAQ,CAAC;EACpC,MAAMY,YAAY,GAAGtD,MAAM,CAAC,KAAK,CAAC;EAClC,MAAMuD,IAAI,GAAGvD,MAAM,CAAC,IAAI,CAAC;EACzBC,SAAS,CAAC,MAAM;IACd2C,eAAe,CAACK,aAAa,CAAC;EAChC,CAAC,EAAE,CAACA,aAAa,EAAEL,eAAe,CAAC,CAAC;EACpC3C,SAAS,CAAC,MAAM;IACd0C,aAAa,CAACa,OAAO,CAACL,eAAe,CAAC,CAAC;EACzC,CAAC,EAAE,CAACA,eAAe,EAAER,aAAa,CAAC,CAAC;EACpC1C,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACX0C,aAAa,CAAC,KAAK,CAAC;MACpBC,eAAe,CAAC,KAAK,CAAC;IACxB,CAAC;EACH,CAAC,EAAE,CAACD,aAAa,EAAEC,eAAe,CAAC,CAAC;;EAEpC;EACA3C,SAAS,CAAC,MAAM;IACd,IAAIuC,SAAS,EAAE;MACb;IACF;;IAEA;IACA,MAAMiB,YAAY,GAAGhB,OAAO,IAAIiB,QAAQ,CAACC,aAAa,IAAID,QAAQ,CAACC,aAAa,CAAC5B,EAAE,KAAKA,EAAE;;IAE1F;IACA,IAAI0B,YAAY,IAAIf,QAAQ,IAAIV,OAAO,IAAI,IAAI,IAAI,CAACsB,YAAY,CAACM,OAAO,EAAE;MACxEC,YAAY,CAAC7B,OAAO,CAAC;MACrBsB,YAAY,CAACM,OAAO,GAAG,IAAI;IAC7B;IACA,IAAIlB,QAAQ,IAAI,CAACW,WAAW,CAACO,OAAO,IAAI5B,OAAO,IAAI,IAAI,EAAE;MACvD6B,YAAY,CAAC7B,OAAO,CAAC;IACvB,CAAC,MAAM,IAAIS,OAAO,IAAIc,IAAI,CAACK,OAAO,IAAI,IAAI,IAAIT,eAAe,IAAI,IAAI,IAAI,CAACf,QAAQ,EAAE;MAClF1B,uBAAuB,CAAC6C,IAAI,CAACK,OAAO,CAAC;IACvC;IACAP,WAAW,CAACO,OAAO,GAAGlB,QAAQ;EAChC,CAAC,EAAE,CAACD,OAAO,EAAEV,EAAE,EAAEH,OAAO,EAAEY,SAAS,EAAER,OAAO,EAAEU,QAAQ,EAAES,eAAe,EAAEf,QAAQ,CAAC,CAAC;EACnF,IAAI0B,QAAQ;EACZ,IAAIpB,QAAQ,IAAI,CAACH,kBAAkB,IAAI,CAACC,SAAS,EAAE;IACjDsB,QAAQ,GAAG,CAAC;EACd,CAAC,MAAM,IAAIrB,OAAO,IAAI,CAACD,SAAS,EAAE;IAChCsB,QAAQ,GAAG,CAAC;EACd,CAAC,MAAM;IACLA,QAAQ,GAAG,CAAC,CAAC;EACf;EACA,IAAIhB,gBAAgB,IAAI,IAAI,EAAE;IAC5BgB,QAAQ,GAAGhB,gBAAgB;EAC7B;EACA,MAAMiB,YAAY,GAAG5B,OAAO,EAAE6B,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACC,IAAI,KAAK,QAAQ,CAAC;EACtE,MAAMC,eAAe,GAAGhC,OAAO,EAAE6B,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACC,IAAI,KAAK,WAAW,CAAC;EAC5E,MAAME,YAAY,GAAGjC,OAAO,EAAE6B,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACC,IAAI,KAAK,QAAQ,CAAC;EACtE,MAAMG,mBAAmB,GAAGnE,WAAW,CAAC,MAAM;IAC5C,IAAI,CAACiC,OAAO,EAAEmC,MAAM,EAAE;MACpB;IACF;IACApB,gBAAgB,CAACD,aAAa,IAAI,CAACA,aAAa,CAAC;EACnD,CAAC,EAAE,CAACd,OAAO,CAAC,CAAC;EACb,MAAMoC,WAAW,GAAGrE,WAAW,CAAC,MAAM;IACpC,IAAIkC,QAAQ,EAAE;MACZ;IACF;IACA,IAAIM,QAAQ,EAAE;MACZ2B,mBAAmB,CAAC,CAAC;IACvB,CAAC,MAAM;MACLnC,QAAQ,GAAG,CAAC;IACd;EACF,CAAC,EAAE,CAACQ,QAAQ,EAAER,QAAQ,EAAEmC,mBAAmB,EAAEjC,QAAQ,CAAC,CAAC;EACvD,MAAMoC,eAAe,GAAGN,IAAI,IAAI;IAC9Bd,kBAAkB,CAACc,IAAI,CAAC;EAC1B,CAAC;EACD,MAAMO,gBAAgB,GAAGA,CAAA,KAAM;IAC7BrB,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EACD,MAAMsB,qBAAqB,GAAGxE,WAAW,CAAC,MAAMyE,KAAK,IAAI;IACvD,MAAMZ,YAAY,EAAEa,eAAe,GAAGD,KAAK,CAAC;IAC5CE,UAAU,CAAC,MAAM;MACf,IAAItB,IAAI,CAACK,OAAO,EAAE;QAChBlD,uBAAuB,CAAC6C,IAAI,CAACK,OAAO,CAAC;MACvC;IACF,CAAC,EAAE,GAAG,CAAC;EACT,CAAC,EAAE,CAACG,YAAY,CAAC,CAAC;EAClB,MAAMe,uBAAuB,GAAG5E,WAAW,CAAC,YAAY;IACtD,MAAMkE,YAAY,EAAEQ,eAAe,GAAGhD,OAAO,CAAC;IAC9C6C,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACL,YAAY,EAAExC,OAAO,CAAC,CAAC;EAC3B,MAAMmD,wBAAwB,GAAG7E,WAAW,CAAC,MAAM8E,aAAa,IAAI;IAClE,MAAMb,eAAe,EAAES,eAAe,GAAGI,aAAa,CAAC;EACzD,CAAC,EAAE,CAACb,eAAe,CAAC,CAAC;EACrB,MAAMc,aAAa,GAAG;IACpBC,MAAM,EAAE;MACN5C,IAAI,EAAEnC,QAAQ;MACdyB,OAAO,EAAEoB,IAAI,CAACmC,SAAS,CAAC,yBAAyB;IACnD,CAAC;IACDC,SAAS,EAAE;MACT9C,IAAI,EAAElC,aAAa;MACnBwB,OAAO,EAAEoB,IAAI,CAACmC,SAAS,CAAC,4BAA4B;IACtD,CAAC;IACDE,IAAI,EAAE;MACJ/C,IAAI,EAAEjC,QAAQ;MACduB,OAAO,EAAEoB,IAAI,CAACmC,SAAS,CAAC,uBAAuB;IACjD,CAAC;IACD,cAAc,EAAE;MACd7C,IAAI,EAAEhC,kBAAkB;MACxBsB,OAAO,EAAEoB,IAAI,CAACmC,SAAS,CAAC,8BAA8B;IACxD,CAAC;IACDG,MAAM,EAAE;MACNhD,IAAI,EAAE/B,UAAU;MAChBqB,OAAO,EAAEoB,IAAI,CAACmC,SAAS,CAAC,yBAAyB,CAAC;MAClDI,WAAW,EAAE;IACf;EACF,CAAC;EACD,MAAMC,gBAAgB,GAAGrD,OAAO,EAAEsD,GAAG,CAACC,KAAA,IAKhC;IAAA,IALiC;MACrCxB,IAAI;MACJhC,QAAQ;MACR0C,eAAe;MACf,GAAGe;IACL,CAAC,GAAAD,KAAA;IACC,MAAME,gBAAgB,GAAG,CAAC1B,IAAI,CAAC2B,QAAQ,CAAC,MAAM,CAAC;IAC/C,OAAO;MACL,GAAGZ,aAAa,CAACf,IAAI,CAAC;MACtB,GAAGyB,iBAAiB;MACpBzD,QAAQ,EAAEA,CAAA,KAAM;QACdA,QAAQ,GAAGN,OAAO,CAAC;QACnByC,mBAAmB,CAAC,CAAC;QACrB,IAAIuB,gBAAgB,EAAE;UACpBpB,eAAe,CAACN,IAAI,CAAC;QACvB;MACF;IACF,CAAC;EACH,CAAC,CAAC;EACF,MAAM4B,aAAa,GAAG5F,WAAW,CAAC6F,KAAK,IAAI;IACzC,IAAIA,KAAK,CAACC,GAAG,KAAK,GAAG,EAAE;MACrBD,KAAK,CAACE,cAAc,CAAC,CAAC;MACtB1B,WAAW,CAAC,CAAC;IACf;EACF,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EACjB,MAAM2B,sBAAsB,GAAGzF,UAAU,CAACG,MAAM,CAACuF,YAAY,EAAEzD,QAAQ,IAAI9B,MAAM,CAACwF,SAAS,CAAC;EAC5F,MAAMC,0BAA0B,GAAGjE,QAAQ,IAAIM,QAAQ,GAAG4D,SAAS,GAAGrE,GAAG;EACzE,MAAMsE,aAAa,GAAGF,0BAA0B,GAAG/E,YAAY,GAAGC,cAAc;EAChF,MAAMiF,YAAY,GAAG/F,UAAU,CAACG,MAAM,CAACa,GAAG,EAAEa,IAAI,IAAI1B,MAAM,CAAC,cAAc,CAAC,EAAEqC,aAAa,IAAIrC,MAAM,CAAC,mBAAmB,CAAC,EAAE8B,QAAQ,IAAI9B,MAAM,CAAC,YAAY,CAAC,EAAE8B,QAAQ,IAAIP,OAAO,EAAEmC,MAAM,IAAI1D,MAAM,CAAC,gBAAgB,CAAC,CAAC;EACpN,MAAM6F,WAAW,GAAG3E,KAAK,GAAG,aAAajC,KAAK,CAAC6G,aAAa,CAAClF,KAAK,EAAE;IAClEmF,IAAI,EAAEjE,QAAQ,GAAG4D,SAAS,GAAG;EAC/B,CAAC,EAAExE,KAAK,CAAC,GAAG,IAAI;EAChB,MAAM8E,gBAAgB,GAAGlE,QAAQ,IAAIP,OAAO,EAAEmC,MAAM,GAAG,aAAazE,KAAK,CAAC6G,aAAa,CAAC,KAAK,EAAE;IAC7FG,SAAS,EAAEpG,UAAU,CAACG,MAAM,CAACkG,QAAQ;EACvC,CAAC,EAAE,aAAajH,KAAK,CAAC6G,aAAa,CAAC1F,IAAI,EAAE;IACxC+F,MAAM,EAAEvG;EACV,CAAC,CAAC,CAAC,GAAG,IAAI;EACV,MAAMwG,SAAS,GAAG,aAAanH,KAAK,CAAC6G,aAAa,CAACH,aAAa,EAAE;IAChExE,EAAE,EAAEA,EAAE;IACN8E,SAAS,EAAEL,YAAY;IACvB1C,QAAQ,EAAEA,QAAQ;IAClB,eAAe,EAAEpB,QAAQ;IACzB,eAAe,EAAEV,OAAO;IACxB,YAAY,EAAEH,kBAAkB;IAChCoF,IAAI,EAAEnE,gBAAgB,IAAI,IAAI,GAAG,KAAK,GAAGwD,SAAS;IAClDlE,QAAQ,EAAEA,QAAQ;IAClBH,GAAG,EAAEoE,0BAA0B;IAC/BtD,OAAO,EAAEA,OAAO;IAChBmE,SAAS,EAAEvG,uBAAuB;IAClCwG,OAAO,EAAE5C,WAAW;IACpB6C,SAAS,EAAEtB;EACb,CAAC,EAAE,aAAajG,KAAK,CAAC6G,aAAa,CAACtF,WAAW,EAAE;IAC/CiG,GAAG,EAAE,KAAK;IACVC,KAAK,EAAE,QAAQ;IACfC,UAAU,EAAE,QAAQ;IACpBC,IAAI,EAAE;EACR,CAAC,EAAE,aAAa3H,KAAK,CAAC6G,aAAa,CAACrF,IAAI,EAAE;IACxCoG,EAAE,EAAE,MAAM;IACVC,OAAO,EAAE,QAAQ;IACjBC,UAAU,EAAE;EACd,CAAC,EAAErF,IAAI,IAAIV,OAAO,CAAC,EAAE6E,WAAW,CAAC,EAAEG,gBAAgB,CAAC;EACpD,MAAMgB,aAAa,GAAG,CAAClF,QAAQ,IAAI,CAACP,OAAO,EAAEmC,MAAM;EACnD,MAAMuD,WAAW,GAAG9D,YAAY,GAAG,aAAalE,KAAK,CAAC6G,aAAa,CAAC5F,WAAW,EAAE;IAC/EgH,IAAI,EAAElG,OAAO;IACbmG,IAAI,EAAE5E,eAAe,KAAK,QAAQ;IAClC6E,OAAO,EAAEvD,gBAAgB;IACzBwD,oBAAoB,EAAEvD,qBAAqB;IAC3CrC,cAAc,EAAEA,cAAc;IAC9BQ,SAAS,EAAEA;EACb,CAAC,CAAC,GAAG,IAAI;EACT,MAAMqF,cAAc,GAAG/D,eAAe,GAAG,aAAatE,KAAK,CAAC6G,aAAa,CAAC7F,cAAc,EAAE;IACxFkH,IAAI,EAAE5E,eAAe,KAAK,WAAW;IACrC2E,IAAI,EAAE9E,IAAI,CAACmC,SAAS,CAAC,uBAAuB,EAAE;MAC5C2C,IAAI,EAAElG;IACR,CAAC,CAAC;IACFoG,OAAO,EAAEvD,gBAAgB;IACzBwD,oBAAoB,EAAElD,wBAAwB;IAC9C1C,cAAc,EAAEA,cAAc;IAC9BQ,SAAS,EAAEA,SAAS,IAAI;EAC1B,CAAC,CAAC,GAAG,IAAI;EACT,MAAMsF,WAAW,GAAG/D,YAAY,GAAG,aAAavE,KAAK,CAAC6G,aAAa,CAACzF,KAAK,EAAE;IACzE8G,IAAI,EAAE5E,eAAe,KAAK,QAAQ;IAClC6E,OAAO,EAAEvD,gBAAgB;IACzB2D,aAAa,EAAE;MACbxG,OAAO,EAAEoB,IAAI,CAACmC,SAAS,CAAC,qCAAqC,CAAC;MAC9DjD,QAAQ,EAAE4C,uBAAuB;MACjCS,WAAW,EAAE,IAAI;MACjBnD,QAAQ,EAAEC;IACZ,CAAC;IACDgG,gBAAgB,EAAE,CAAC;MACjBzG,OAAO,EAAEoB,IAAI,CAACmC,SAAS,CAAC,qCAAqC,CAAC;MAC9DjD,QAAQ,EAAEuC;IACZ,CAAC,CAAC;IACF6D,KAAK,EAAEtF,IAAI,CAACmC,SAAS,CAAC,oCAAoC,CAAC;IAC3DoD,OAAO,EAAE;EACX,CAAC,EAAE,aAAa1I,KAAK,CAAC6G,aAAa,CAACzF,KAAK,CAACuH,OAAO,EAAE,IAAI,EAAExF,IAAI,CAACmC,SAAS,CAAC,0CAA0C,EAAE;IAClHsD,QAAQ,EAAE7G;EACZ,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;EACX,MAAM8G,MAAM,GAAGd,aAAa,IAAIxF,QAAQ,GAAG4E,SAAS,GAAG,aAAanH,KAAK,CAAC6G,aAAa,CAAC7G,KAAK,CAAC8I,QAAQ,EAAE,IAAI,EAAE,aAAa9I,KAAK,CAAC6G,aAAa,CAACxF,OAAO,EAAE;IACtJ0H,MAAM,EAAE3F,aAAa;IACrB+D,SAAS,EAAEA,SAAS;IACpB6B,eAAe,EAAE,YAAY;IAC7Bb,OAAO,EAAE3D;EACX,CAAC,EAAE,aAAaxE,KAAK,CAAC6G,aAAa,CAAC,KAAK,EAAE;IACzCG,SAAS,EAAEjG,MAAM,CAACkI;EACpB,CAAC,EAAE,aAAajJ,KAAK,CAAC6G,aAAa,CAACvF,UAAU,EAAE;IAC9C4H,UAAU,EAAE,UAAU;IACtBC,KAAK,EAAExD;EACT,CAAC,CAAC,CAAC,CAAC,EAAEqC,WAAW,EAAEK,cAAc,EAAEC,WAAW,CAAC;EAC/C,IAAI7F,IAAI,EAAE;IACR,OAAOoG,MAAM;EACf;EACA,OAAO,aAAa7I,KAAK,CAAC6G,aAAa,CAAC,IAAI,EAAE;IAC5CG,SAAS,EAAEX,sBAAsB;IACjCvE,GAAG,EAAEsH,SAAS,CAAC,CAAC1F,IAAI,EAAE5B,GAAG,CAAC,CAAC;IAC3BsF,IAAI,EAAE;EACR,CAAC,EAAEyB,MAAM,CAAC;AACZ,CAAC,CAAC;AACFjH,GAAG,CAACyH,WAAW,GAAG,KAAK;AACvB,SAASrF,YAAYA,CAAC7B,OAAO,EAAE;EAC7B,MAAMmH,KAAK,GAAGzF,QAAQ,CAAC0F,cAAc,CAACpH,OAAO,CAAC;EAC9C,IAAImH,KAAK,EAAE;IACTA,KAAK,CAACE,KAAK,CAAC;MACVC,aAAa,EAAE;IACjB,CAAC,CAAC;EACJ;AACF;AACA,SAASL,SAASA,CAACM,IAAI,EAAE;EACvB,OAAOhG,IAAI,IAAI;IACb,KAAK,MAAM5B,GAAG,IAAI4H,IAAI,EAAE;MACtB,IAAI5H,GAAG,IAAI,IAAI,EAAE;QACfA,GAAG,CAACiC,OAAO,GAAGL,IAAI;MACpB;IACF;EACF,CAAC;AACH;AAEA,SAAS9B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
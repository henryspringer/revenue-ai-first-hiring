{"ast":null,"code":"import React, { useRef, useState, useCallback, useMemo, useEffect, useLayoutEffect } from 'react';\nimport { SortAscendingIcon, SortDescendingIcon } from '@shopify/polaris-icons';\nimport { CSSTransition } from 'react-transition-group';\nimport { debounce } from '../../utilities/debounce.js';\nimport { useToggle } from '../../utilities/use-toggle.js';\nimport { classNames } from '../../utilities/css.js';\nimport { useTheme } from '../../utilities/use-theme.js';\nimport styles from './IndexTable.css.js';\nimport { IndexProvider } from '../IndexProvider/IndexProvider.js';\nimport { Cell } from './components/Cell/Cell.js';\nimport { Row } from './components/Row/Row.js';\nimport { SELECT_ALL_ITEMS, SelectionType } from '../../utilities/index-provider/types.js';\nimport { getTableHeadingsBySelector } from './utilities/utilities.js';\nimport { EmptySearchResult } from '../EmptySearchResult/EmptySearchResult.js';\nimport { ScrollContainer } from './components/ScrollContainer/ScrollContainer.js';\nimport { BulkActions } from '../BulkActions/BulkActions.js';\nimport { useIndexValue, useIndexSelectionChange } from '../../utilities/index-provider/hooks.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { Spinner } from '../Spinner/Spinner.js';\nimport { AfterInitialMount } from '../AfterInitialMount/AfterInitialMount.js';\nimport { EventListener } from '../EventListener/EventListener.js';\nimport { Pagination } from '../Pagination/Pagination.js';\nimport { Checkbox } from '../Checkbox/Checkbox.js';\nimport { Text } from '../Text/Text.js';\nimport { LegacyStack } from '../LegacyStack/LegacyStack.js';\nimport { Badge } from '../Badge/Badge.js';\nimport { UnstyledButton } from '../UnstyledButton/UnstyledButton.js';\nimport { Tooltip } from '../Tooltip/Tooltip.js';\nimport { Sticky } from '../Sticky/Sticky.js';\nconst SCROLL_BAR_PADDING = 16;\nconst SCROLL_BAR_DEBOUNCE_PERIOD = 300;\nfunction IndexTableBase(_ref) {\n  let {\n    headings,\n    bulkActions = [],\n    promotedBulkActions = [],\n    children,\n    emptyState,\n    sort,\n    paginatedSelectAllActionText,\n    lastColumnSticky = false,\n    sortable,\n    sortDirection,\n    defaultSortDirection = 'descending',\n    sortColumnIndex,\n    onSort,\n    sortToggleLabels,\n    hasZebraStriping,\n    pagination,\n    ...restProps\n  } = _ref;\n  const theme = useTheme();\n  const {\n    loading,\n    bulkSelectState,\n    resourceName,\n    bulkActionsAccessibilityLabel,\n    selectMode,\n    selectable = restProps.selectable,\n    paginatedSelectAllText,\n    itemCount,\n    hasMoreItems,\n    selectedItemsCount,\n    condensed\n  } = useIndexValue();\n  const handleSelectionChange = useIndexSelectionChange();\n  const i18n = useI18n();\n  const {\n    value: hasMoreLeftColumns,\n    toggle: toggleHasMoreLeftColumns\n  } = useToggle(false);\n  const tablePosition = useRef({\n    top: 0,\n    left: 0\n  });\n  const tableHeadingRects = useRef([]);\n  const scrollableContainerElement = useRef(null);\n  const tableElement = useRef(null);\n  const tableBodyElement = useRef(null);\n  const condensedListElement = useRef(null);\n  const loadingElement = useRef(null);\n  const [tableInitialized, setTableInitialized] = useState(false);\n  const [stickyWrapper, setStickyWrapper] = useState(null);\n  const [hideScrollContainer, setHideScrollContainer] = useState(true);\n  const tableHeadings = useRef([]);\n  const stickyTableHeadings = useRef([]);\n  const stickyHeaderWrapperElement = useRef(null);\n  const firstStickyHeaderElement = useRef(null);\n  const stickyHeaderElement = useRef(null);\n  const scrollBarElement = useRef(null);\n  const scrollContainerElement = useRef(null);\n  const scrollingWithBar = useRef(false);\n  const scrollingContainer = useRef(false);\n  const lastSortedColumnIndex = useRef(sortColumnIndex);\n  const renderAfterSelectEvent = useRef(false);\n  const lastSelectedItemsCount = useRef(0);\n  const hasSelected = useRef(false);\n  if (selectedItemsCount !== lastSelectedItemsCount.current) {\n    renderAfterSelectEvent.current = true;\n    lastSelectedItemsCount.current = selectedItemsCount;\n  }\n  if (!hasSelected.current && selectedItemsCount !== 0) {\n    hasSelected.current = true;\n  }\n  const tableBodyRef = useCallback(node => {\n    if (node !== null && !tableInitialized) {\n      setTableInitialized(true);\n    }\n    tableBodyElement.current = node;\n  }, [tableInitialized]);\n  const handleSelectAllItemsInStore = useCallback(() => {\n    handleSelectionChange(selectedItemsCount === SELECT_ALL_ITEMS ? SelectionType.Page : SelectionType.All, true);\n  }, [handleSelectionChange, selectedItemsCount]);\n  const resizeTableHeadings = useMemo(() => debounce(() => {\n    if (!tableElement.current || !scrollableContainerElement.current) {\n      return;\n    }\n    const boundingRect = scrollableContainerElement.current.getBoundingClientRect();\n    tablePosition.current = {\n      top: boundingRect.top,\n      left: boundingRect.left\n    };\n    tableHeadingRects.current = tableHeadings.current.map(heading => ({\n      offsetWidth: heading.offsetWidth || 0,\n      offsetLeft: heading.offsetLeft || 0\n    }));\n    if (tableHeadings.current.length === 0) {\n      return;\n    }\n\n    // update left offset for first column\n    if (selectable && tableHeadings.current.length > 1) {\n      tableHeadings.current[1].style.left = `${tableHeadingRects.current[0].offsetWidth}px`;\n      if (stickyTableHeadings.current?.length) {\n        stickyTableHeadings.current[1].style.left = `${tableHeadingRects.current[0].offsetWidth}px`;\n      }\n    }\n\n    // update sticky header min-widths to match table widths\n    if (stickyTableHeadings.current?.length) {\n      stickyTableHeadings.current.forEach((heading, index) => {\n        heading.style.minWidth = `${tableHeadingRects.current[index]?.offsetWidth || 0}px`;\n      });\n    }\n  }), [selectable]);\n  const resizeTableScrollBar = useCallback(() => {\n    if (scrollBarElement.current && tableElement.current && tableInitialized) {\n      scrollBarElement.current.style.setProperty('--pc-index-table-scroll-bar-content-width', `${tableElement.current.offsetWidth - SCROLL_BAR_PADDING}px`);\n      setHideScrollContainer(scrollContainerElement.current?.offsetWidth === tableElement.current?.offsetWidth);\n    }\n  }, [tableInitialized]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debounceResizeTableScrollbar = useCallback(debounce(resizeTableScrollBar, SCROLL_BAR_DEBOUNCE_PERIOD, {\n    trailing: true\n  }), [resizeTableScrollBar]);\n  const [canScrollRight, setCanScrollRight] = useState(true);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const handleCanScrollRight = useCallback(debounce(() => {\n    if (!lastColumnSticky || !tableElement.current || !scrollableContainerElement.current) {\n      return;\n    }\n    const tableRect = tableElement.current.getBoundingClientRect();\n    const scrollableRect = scrollableContainerElement.current.getBoundingClientRect();\n    setCanScrollRight(tableRect.width > scrollableRect.width);\n  }), [lastColumnSticky]);\n  useEffect(() => {\n    handleCanScrollRight();\n  }, [handleCanScrollRight]);\n  const [canFitStickyColumn, setCanFitStickyColumn] = useState(true);\n  const handleCanFitStickyColumn = useCallback(() => {\n    if (!scrollableContainerElement.current || !tableHeadings.current.length) {\n      return;\n    }\n    const scrollableRect = scrollableContainerElement.current.getBoundingClientRect();\n    const checkboxColumnWidth = selectable ? tableHeadings.current[0].getBoundingClientRect().width : 0;\n    const firstStickyColumnWidth = tableHeadings.current[selectable ? 1 : 0].getBoundingClientRect().width;\n    const lastColumnIsNotTheFirst = selectable ? tableHeadings.current.length > 2 : 1;\n    // Don't consider the last column in the calculations if it's not sticky\n    const lastStickyColumnWidth = lastColumnSticky && lastColumnIsNotTheFirst ? tableHeadings.current[tableHeadings.current.length - 1].getBoundingClientRect().width : 0;\n    // Secure some space for the remaining columns to be visible\n    const restOfContentMinWidth = 100;\n    setCanFitStickyColumn(scrollableRect.width > firstStickyColumnWidth + checkboxColumnWidth + lastStickyColumnWidth + restOfContentMinWidth);\n  }, [lastColumnSticky, selectable]);\n  useEffect(() => {\n    if (tableInitialized) {\n      handleCanFitStickyColumn();\n    }\n  }, [handleCanFitStickyColumn, tableInitialized]);\n  const handleResize = useCallback(() => {\n    // hide the scrollbar when resizing\n    scrollBarElement.current?.style.setProperty('--pc-index-table-scroll-bar-content-width', `0px`);\n    resizeTableHeadings();\n    debounceResizeTableScrollbar();\n    handleCanScrollRight();\n    handleCanFitStickyColumn();\n  }, [resizeTableHeadings, debounceResizeTableScrollbar, handleCanScrollRight, handleCanFitStickyColumn]);\n  const handleScrollContainerScroll = useCallback((canScrollLeft, canScrollRight) => {\n    if (!scrollableContainerElement.current || !scrollBarElement.current) {\n      return;\n    }\n    if (!scrollingWithBar.current) {\n      scrollingContainer.current = true;\n      scrollBarElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;\n    }\n    scrollingWithBar.current = false;\n    if (stickyHeaderElement.current) {\n      stickyHeaderElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;\n    }\n    if (canScrollLeft && !hasMoreLeftColumns || !canScrollLeft && hasMoreLeftColumns) {\n      toggleHasMoreLeftColumns();\n    }\n    setCanScrollRight(canScrollRight);\n  }, [hasMoreLeftColumns, toggleHasMoreLeftColumns]);\n  const handleScrollBarScroll = useCallback(() => {\n    if (!scrollableContainerElement.current || !scrollBarElement.current) {\n      return;\n    }\n    if (!scrollingContainer.current) {\n      scrollingWithBar.current = true;\n      scrollableContainerElement.current.scrollLeft = scrollBarElement.current.scrollLeft;\n    }\n    scrollingContainer.current = false;\n  }, []);\n  useLayoutEffect(() => {\n    tableHeadings.current = getTableHeadingsBySelector(tableElement.current, '[data-index-table-heading]');\n    stickyTableHeadings.current = getTableHeadingsBySelector(stickyHeaderWrapperElement.current, '[data-index-table-sticky-heading]');\n    resizeTableHeadings();\n  }, [headings, resizeTableHeadings, firstStickyHeaderElement, tableInitialized]);\n  useEffect(() => {\n    resizeTableScrollBar();\n    setStickyWrapper(condensed ? condensedListElement.current : tableElement.current);\n  }, [tableInitialized, resizeTableScrollBar, condensed]);\n  const headingsMarkup = headings.map((heading, index) => renderHeading(heading, index, 'th', {\n    'data-index-table-heading': true\n  }, heading.id));\n  const stickyHeadingsMarkup = headings.map((heading, index) =>\n  // NOTE: No id since it would be a duplicate of the non-sticky header's id\n  renderHeading(heading, index, 'div', {\n    'data-index-table-sticky-heading': true\n  }));\n  const [selectedItemsCountValue, setSelectedItemsCountValue] = useState(selectedItemsCount === SELECT_ALL_ITEMS ? `${itemCount}+` : selectedItemsCount);\n  useEffect(() => {\n    if (selectedItemsCount === SELECT_ALL_ITEMS || selectedItemsCount > 0) {\n      setSelectedItemsCountValue(selectedItemsCount === SELECT_ALL_ITEMS ? `${itemCount}+` : selectedItemsCount);\n    }\n  }, [selectedItemsCount, itemCount]);\n  const selectAllActionsLabel = i18n.translate('Polaris.IndexTable.selected', {\n    selectedItemsCount: selectedItemsCountValue\n  });\n  const handleTogglePage = useCallback(() => {\n    handleSelectionChange(SelectionType.Page, Boolean(!bulkSelectState || bulkSelectState === 'indeterminate'));\n  }, [bulkSelectState, handleSelectionChange]);\n  const paginatedSelectAllAction = getPaginatedSelectAllAction();\n  const loadingTransitionClassNames = {\n    enter: styles['LoadingContainer-enter'],\n    enterActive: styles['LoadingContainer-enter-active'],\n    exit: styles['LoadingContainer-exit'],\n    exitActive: styles['LoadingContainer-exit-active']\n  };\n  const loadingMarkup = /*#__PURE__*/React.createElement(CSSTransition, {\n    in: loading,\n    classNames: loadingTransitionClassNames,\n    timeout: parseInt(theme.motion['motion-duration-100'], 10),\n    nodeRef: loadingElement,\n    appear: true,\n    unmountOnExit: true\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.LoadingPanel,\n    ref: loadingElement\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.LoadingPanelRow\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: \"small\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.LoadingPanelText\n  }, i18n.translate('Polaris.IndexTable.resourceLoadingAccessibilityLabel', {\n    resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n  })))));\n  const stickyTableClassNames = classNames(styles.StickyTable, hasMoreLeftColumns && styles['StickyTable-scrolling'], condensed && styles['StickyTable-condensed']);\n  const shouldShowActions = !condensed || selectedItemsCount;\n  const promotedActions = shouldShowActions ? promotedBulkActions : [];\n  const actions = shouldShowActions ? bulkActions : [];\n  const stickyHeaderMarkup = /*#__PURE__*/React.createElement(\"div\", {\n    className: stickyTableClassNames,\n    role: \"presentation\"\n  }, /*#__PURE__*/React.createElement(Sticky, {\n    boundingElement: stickyWrapper\n  }, isSticky => {\n    const stickyHeaderClassNames = classNames(styles.StickyTableHeader, isSticky && styles['StickyTableHeader-isSticky'],\n    // Has a sticky left column enabled\n    canFitStickyColumn && styles['StickyTableHeader-sticky'],\n    // ie; is scrolled to the right\n    hasMoreLeftColumns && styles['StickyTableHeader-scrolling'],\n    // Has a sticky right column enabled\n    canFitStickyColumn && lastColumnSticky && styles['StickyTableHeader-sticky-last'],\n    // ie; is scrolled to the left\n    canFitStickyColumn && lastColumnSticky && canScrollRight && styles['StickyTableHeader-sticky-scrolling']);\n    const bulkActionsClassName = classNames(styles.BulkActionsWrapper, selectMode && styles.BulkActionsWrapperVisible, condensed && styles['StickyTableHeader-condensed'], isSticky && styles['StickyTableHeader-isSticky']);\n    const bulkActionsMarkup = shouldShowActions && !condensed ? /*#__PURE__*/React.createElement(\"div\", {\n      className: bulkActionsClassName\n    }, /*#__PURE__*/React.createElement(BulkActions, {\n      selectMode: selectMode,\n      onToggleAll: handleTogglePage,\n      paginatedSelectAllText: paginatedSelectAllText,\n      paginatedSelectAllAction: paginatedSelectAllAction,\n      accessibilityLabel: bulkActionsAccessibilityLabel,\n      selected: bulkSelectState,\n      promotedActions: promotedActions,\n      actions: actions,\n      onSelectModeToggle: condensed ? handleSelectModeToggle : undefined,\n      label: selectAllActionsLabel,\n      buttonSize: \"micro\"\n    })) : null;\n    const headerMarkup = condensed ? /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(styles.HeaderWrapper, (!selectable || condensed) && styles.unselectable)\n    }, loadingMarkup, sort) : /*#__PURE__*/React.createElement(\"div\", {\n      className: stickyHeaderClassNames,\n      ref: stickyHeaderWrapperElement\n    }, loadingMarkup, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.StickyTableHeadings,\n      ref: stickyHeaderElement\n    }, stickyHeadingsMarkup));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, headerMarkup, bulkActionsMarkup);\n  }));\n  const scrollBarWrapperClassNames = classNames(styles.ScrollBarContainer, pagination && styles.ScrollBarContainerWithPagination, condensed && styles.scrollBarContainerCondensed, hideScrollContainer && styles.scrollBarContainerHidden);\n  const scrollBarClassNames = classNames(tableElement.current && tableInitialized && styles.ScrollBarContent);\n  const scrollBarMarkup = itemCount > 0 ? /*#__PURE__*/React.createElement(AfterInitialMount, {\n    onMount: resizeTableScrollBar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: scrollBarWrapperClassNames,\n    ref: scrollContainerElement\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onScroll: handleScrollBarScroll,\n    className: styles.ScrollBar,\n    ref: scrollBarElement\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: scrollBarClassNames\n  })))) : null;\n  const isSortable = sortable?.some(value => value);\n  const tableClassNames = classNames(styles.Table, hasMoreLeftColumns && styles['Table-scrolling'], selectMode && styles.disableTextSelection, !selectable && styles['Table-unselectable'], canFitStickyColumn && styles['Table-sticky'], isSortable && styles['Table-sortable'], canFitStickyColumn && lastColumnSticky && styles['Table-sticky-last'], canFitStickyColumn && lastColumnSticky && canScrollRight && styles['Table-sticky-scrolling'], hasZebraStriping && styles.ZebraStriping);\n  const emptyStateMarkup = emptyState ? emptyState : /*#__PURE__*/React.createElement(EmptySearchResult, {\n    title: i18n.translate('Polaris.IndexTable.emptySearchTitle', {\n      resourceNamePlural: resourceName.plural\n    }),\n    description: i18n.translate('Polaris.IndexTable.emptySearchDescription'),\n    withIllustration: true\n  });\n  const sharedMarkup = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EventListener, {\n    event: \"resize\",\n    handler: handleResize\n  }), stickyHeaderMarkup);\n  const condensedClassNames = classNames(styles.CondensedList, hasZebraStriping && styles.ZebraStriping);\n  const bodyMarkup = condensed ? /*#__PURE__*/React.createElement(React.Fragment, null, sharedMarkup, /*#__PURE__*/React.createElement(\"ul\", {\n    \"data-selectmode\": Boolean(selectMode),\n    className: condensedClassNames,\n    ref: condensedListElement\n  }, children)) : /*#__PURE__*/React.createElement(React.Fragment, null, sharedMarkup, /*#__PURE__*/React.createElement(ScrollContainer, {\n    scrollableContainerRef: scrollableContainerElement,\n    onScroll: handleScrollContainerScroll\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    ref: tableElement,\n    className: tableClassNames\n  }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", {\n    className: styles.HeadingRow\n  }, headingsMarkup)), /*#__PURE__*/React.createElement(\"tbody\", {\n    ref: tableBodyRef\n  }, children))));\n  const tableContentMarkup = itemCount > 0 ? bodyMarkup : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.EmptySearchResultWrapper\n  }, emptyStateMarkup);\n  const paginationMarkup = pagination ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.PaginationWrapper\n  }, /*#__PURE__*/React.createElement(Pagination, Object.assign({\n    type: \"table\"\n  }, pagination))) : null;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.IndexTable\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.IndexTableWrapper\n  }, !condensed && loadingMarkup, tableContentMarkup, scrollBarMarkup, paginationMarkup)));\n  function renderHeading(heading, index, Tag, tagProps, id) {\n    const isSecond = index === 0;\n    const isLast = index === headings.length - 1;\n    const hasSortable = sortable?.some(value => value === true);\n    const headingAlignment = heading.alignment || 'start';\n    const headingContentClassName = classNames(styles.TableHeading, headingAlignment === 'center' && styles['TableHeading-align-center'], headingAlignment === 'end' && styles['TableHeading-align-end'], hasSortable && styles['TableHeading-sortable'], isSecond && styles['TableHeading-second'], isLast && !heading.hidden && styles['TableHeading-last'], !selectable && styles['TableHeading-unselectable'], heading.flush && styles['TableHeading-flush']);\n    const stickyPositioningStyle = selectable !== false && isSecond && tableHeadingRects.current && tableHeadingRects.current.length > 0 ? {\n      left: tableHeadingRects.current[0].offsetWidth\n    } : undefined;\n    const headingContent = /*#__PURE__*/React.createElement(Tag, Object.assign({\n      id: id,\n      className: headingContentClassName,\n      key: getHeadingKey(heading),\n      style: stickyPositioningStyle\n    }, tagProps), renderHeadingContent(heading, index));\n    if (index !== 0 || !selectable) {\n      return headingContent;\n    }\n    const checkboxClassName = classNames(styles.TableHeading, hasSortable && styles['TableHeading-sortable'], index === 0 && styles['TableHeading-first']);\n    const checkboxContent = /*#__PURE__*/React.createElement(Tag, Object.assign({\n      className: checkboxClassName,\n      key: `${heading}-${index}`\n    }, tagProps), renderCheckboxContent());\n    return [checkboxContent, headingContent];\n  }\n  function renderCheckboxContent() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.ColumnHeaderCheckboxWrapper\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      label: i18n.translate('Polaris.IndexTable.selectAllLabel', {\n        resourceNamePlural: resourceName.plural\n      }),\n      labelHidden: true,\n      onChange: handleSelectPage,\n      checked: bulkSelectState\n    }));\n  }\n  function handleSortHeadingClick(index, direction) {\n    renderAfterSelectEvent.current = false;\n    hasSelected.current = false;\n    lastSortedColumnIndex.current = sortColumnIndex;\n    onSort?.(index, direction);\n  }\n  function renderHeadingContent(heading, index) {\n    let headingContent;\n    const defaultTooltipProps = {\n      width: heading.tooltipWidth ?? 'default',\n      activatorWrapper: 'div',\n      dismissOnMouseOut: true,\n      persistOnClick: heading.tooltipPersistsOnClick\n    };\n    const defaultHeaderTooltipProps = {\n      ...defaultTooltipProps,\n      padding: '400',\n      borderRadius: '200',\n      content: heading.tooltipContent,\n      preferredPosition: 'above'\n    };\n    const headingTitle = /*#__PURE__*/React.createElement(Text, {\n      as: \"span\",\n      variant: \"bodySm\",\n      fontWeight: \"medium\",\n      visuallyHidden: heading.hidden\n    }, heading.title);\n    if (heading.new) {\n      headingContent = /*#__PURE__*/React.createElement(LegacyStack, {\n        wrap: false,\n        alignment: \"center\"\n      }, headingTitle, /*#__PURE__*/React.createElement(Badge, {\n        tone: \"new\"\n      }, i18n.translate('Polaris.IndexTable.onboardingBadgeText')));\n    } else {\n      headingContent = headingTitle;\n    }\n    const style = {\n      '--pc-index-table-heading-extra-padding-right': heading.paddingBlockEnd ? `var(--p-space-${heading.paddingBlockEnd})` : '0'\n    };\n    if (sortable?.[index]) {\n      const isCurrentlySorted = index === sortColumnIndex;\n      const isPreviouslySorted = !isCurrentlySorted && index === lastSortedColumnIndex.current;\n      const isRenderAfterSelectEvent = renderAfterSelectEvent.current || !hasSelected.current && selectedItemsCount !== 0;\n      const isAscending = sortDirection === 'ascending';\n      let newDirection = heading.defaultSortDirection ?? defaultSortDirection;\n      let SourceComponent = newDirection === 'ascending' ? SortAscendingIcon : SortDescendingIcon;\n      if (isCurrentlySorted) {\n        newDirection = isAscending ? 'descending' : 'ascending';\n        SourceComponent = sortDirection === 'ascending' ? SortAscendingIcon : SortDescendingIcon;\n      }\n      const iconMarkup = /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames(styles.TableHeadingSortIcon, heading?.alignment === 'end' && styles['TableHeadingSortIcon-heading-align-end'], isCurrentlySorted && styles['TableHeadingSortIcon-visible'])\n      }, /*#__PURE__*/React.createElement(SourceComponent, {\n        focusable: \"false\",\n        \"aria-hidden\": \"true\",\n        className: styles.TableHeadingSortSvg\n      }));\n      const defaultSortButtonProps = {\n        onClick: () => handleSortHeadingClick(index, newDirection),\n        className: classNames(styles.TableHeadingSortButton, !isCurrentlySorted && heading?.alignment === 'end' && styles['TableHeadingSortButton-heading-align-end'], isCurrentlySorted && heading?.alignment === 'end' && styles['TableHeadingSortButton-heading-align-end-currently-sorted'], isPreviouslySorted && !isRenderAfterSelectEvent && heading?.alignment === 'end' && styles['TableHeadingSortButton-heading-align-end-previously-sorted']),\n        tabIndex: selectMode ? -1 : 0\n      };\n      const sortMarkup = /*#__PURE__*/React.createElement(UnstyledButton, defaultSortButtonProps, iconMarkup, /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames(sortToggleLabels && selectMode && heading.tooltipContent && styles.TableHeadingTooltipUnderlinePlaceholder)\n      }, headingContent));\n      if (!sortToggleLabels || selectMode) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: styles.SortableTableHeadingWithCustomMarkup\n        }, sortMarkup);\n      }\n      const tooltipDirection = isCurrentlySorted ? sortDirection : newDirection;\n      const sortTooltipContent = sortToggleLabels[index][tooltipDirection];\n      if (!heading.tooltipContent) {\n        return (/*#__PURE__*/\n          // Regular header with sort icon and sort direction tooltip\n          React.createElement(\"div\", {\n            style: style,\n            className: classNames(heading.paddingBlockEnd && styles['TableHeading-extra-padding-right'])\n          }, /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, defaultTooltipProps, {\n            content: sortTooltipContent,\n            preferredPosition: \"above\"\n          }), sortMarkup))\n        );\n      }\n      if (heading.tooltipContent) {\n        return (/*#__PURE__*/\n          // Header text and sort icon have separate tooltips\n          React.createElement(\"div\", {\n            className: classNames(styles.SortableTableHeadingWithCustomMarkup, heading.paddingBlockEnd && styles['TableHeading-extra-padding-right']),\n            style: style\n          }, /*#__PURE__*/React.createElement(UnstyledButton, defaultSortButtonProps, /*#__PURE__*/React.createElement(Tooltip, defaultHeaderTooltipProps, /*#__PURE__*/React.createElement(\"span\", {\n            className: styles.TableHeadingUnderline\n          }, headingContent)), /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, defaultTooltipProps, {\n            content: sortTooltipContent,\n            preferredPosition: \"above\"\n          }), iconMarkup)))\n        );\n      }\n    }\n    if (heading.tooltipContent) {\n      return (/*#__PURE__*/\n        // Non-sortable header with tooltip\n        React.createElement(\"div\", {\n          style: style,\n          className: classNames(heading.paddingBlockEnd && styles['TableHeading-extra-padding-right'])\n        }, /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, defaultHeaderTooltipProps, {\n          activatorWrapper: \"span\"\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: classNames(styles.TableHeadingUnderline, styles.SortableTableHeaderWrapper)\n        }, headingContent)))\n      );\n    }\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: style,\n      className: classNames(heading.paddingBlockEnd && styles['TableHeading-extra-padding-right'])\n    }, headingContent);\n  }\n  function handleSelectPage(checked) {\n    handleSelectionChange(SelectionType.Page, checked);\n  }\n  function getPaginatedSelectAllAction() {\n    if (!selectable || !hasMoreItems) {\n      return;\n    }\n    const customActionText = paginatedSelectAllActionText ?? i18n.translate('Polaris.IndexTable.selectAllItems', {\n      itemsLength: itemCount,\n      resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n    });\n    const actionText = selectedItemsCount === SELECT_ALL_ITEMS ? i18n.translate('Polaris.IndexTable.undo') : customActionText;\n    return {\n      content: actionText,\n      onAction: handleSelectAllItemsInStore\n    };\n  }\n  function handleSelectModeToggle() {\n    handleSelectionChange(SelectionType.All, false);\n  }\n}\nfunction getHeadingKey(heading) {\n  if (heading.id) {\n    return heading.id;\n  } else if (typeof heading.title === 'string') {\n    return heading.title;\n  }\n  return '';\n}\nfunction IndexTable(_ref2) {\n  let {\n    children,\n    selectable = true,\n    itemCount,\n    selectedItemsCount = 0,\n    resourceName: passedResourceName,\n    loading,\n    hasMoreItems,\n    condensed,\n    onSelectionChange,\n    paginatedSelectAllText,\n    ...indexTableBaseProps\n  } = _ref2;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IndexProvider, {\n    selectable: selectable && !condensed,\n    itemCount: itemCount,\n    selectedItemsCount: selectedItemsCount,\n    resourceName: passedResourceName,\n    loading: loading,\n    hasMoreItems: hasMoreItems,\n    condensed: condensed,\n    onSelectionChange: onSelectionChange,\n    paginatedSelectAllText: paginatedSelectAllText\n  }, /*#__PURE__*/React.createElement(IndexTableBase, indexTableBaseProps, children)));\n}\nIndexTable.Cell = Cell;\nIndexTable.Row = Row;\nexport { IndexTable };","map":{"version":3,"names":["React","useRef","useState","useCallback","useMemo","useEffect","useLayoutEffect","SortAscendingIcon","SortDescendingIcon","CSSTransition","debounce","useToggle","classNames","useTheme","styles","IndexProvider","Cell","Row","SELECT_ALL_ITEMS","SelectionType","getTableHeadingsBySelector","EmptySearchResult","ScrollContainer","BulkActions","useIndexValue","useIndexSelectionChange","useI18n","Spinner","AfterInitialMount","EventListener","Pagination","Checkbox","Text","LegacyStack","Badge","UnstyledButton","Tooltip","Sticky","SCROLL_BAR_PADDING","SCROLL_BAR_DEBOUNCE_PERIOD","IndexTableBase","_ref","headings","bulkActions","promotedBulkActions","children","emptyState","sort","paginatedSelectAllActionText","lastColumnSticky","sortable","sortDirection","defaultSortDirection","sortColumnIndex","onSort","sortToggleLabels","hasZebraStriping","pagination","restProps","theme","loading","bulkSelectState","resourceName","bulkActionsAccessibilityLabel","selectMode","selectable","paginatedSelectAllText","itemCount","hasMoreItems","selectedItemsCount","condensed","handleSelectionChange","i18n","value","hasMoreLeftColumns","toggle","toggleHasMoreLeftColumns","tablePosition","top","left","tableHeadingRects","scrollableContainerElement","tableElement","tableBodyElement","condensedListElement","loadingElement","tableInitialized","setTableInitialized","stickyWrapper","setStickyWrapper","hideScrollContainer","setHideScrollContainer","tableHeadings","stickyTableHeadings","stickyHeaderWrapperElement","firstStickyHeaderElement","stickyHeaderElement","scrollBarElement","scrollContainerElement","scrollingWithBar","scrollingContainer","lastSortedColumnIndex","renderAfterSelectEvent","lastSelectedItemsCount","hasSelected","current","tableBodyRef","node","handleSelectAllItemsInStore","Page","All","resizeTableHeadings","boundingRect","getBoundingClientRect","map","heading","offsetWidth","offsetLeft","length","style","forEach","index","minWidth","resizeTableScrollBar","setProperty","debounceResizeTableScrollbar","trailing","canScrollRight","setCanScrollRight","handleCanScrollRight","tableRect","scrollableRect","width","canFitStickyColumn","setCanFitStickyColumn","handleCanFitStickyColumn","checkboxColumnWidth","firstStickyColumnWidth","lastColumnIsNotTheFirst","lastStickyColumnWidth","restOfContentMinWidth","handleResize","handleScrollContainerScroll","canScrollLeft","scrollLeft","handleScrollBarScroll","headingsMarkup","renderHeading","id","stickyHeadingsMarkup","selectedItemsCountValue","setSelectedItemsCountValue","selectAllActionsLabel","translate","handleTogglePage","Boolean","paginatedSelectAllAction","getPaginatedSelectAllAction","loadingTransitionClassNames","enter","enterActive","exit","exitActive","loadingMarkup","createElement","in","timeout","parseInt","motion","nodeRef","appear","unmountOnExit","className","LoadingPanel","ref","LoadingPanelRow","size","LoadingPanelText","resourceNamePlural","plural","toLocaleLowerCase","stickyTableClassNames","StickyTable","shouldShowActions","promotedActions","actions","stickyHeaderMarkup","role","boundingElement","isSticky","stickyHeaderClassNames","StickyTableHeader","bulkActionsClassName","BulkActionsWrapper","BulkActionsWrapperVisible","bulkActionsMarkup","onToggleAll","accessibilityLabel","selected","onSelectModeToggle","handleSelectModeToggle","undefined","label","buttonSize","headerMarkup","HeaderWrapper","unselectable","StickyTableHeadings","Fragment","scrollBarWrapperClassNames","ScrollBarContainer","ScrollBarContainerWithPagination","scrollBarContainerCondensed","scrollBarContainerHidden","scrollBarClassNames","ScrollBarContent","scrollBarMarkup","onMount","onScroll","ScrollBar","isSortable","some","tableClassNames","Table","disableTextSelection","ZebraStriping","emptyStateMarkup","title","description","withIllustration","sharedMarkup","event","handler","condensedClassNames","CondensedList","bodyMarkup","scrollableContainerRef","HeadingRow","tableContentMarkup","EmptySearchResultWrapper","paginationMarkup","PaginationWrapper","Object","assign","type","IndexTable","IndexTableWrapper","Tag","tagProps","isSecond","isLast","hasSortable","headingAlignment","alignment","headingContentClassName","TableHeading","hidden","flush","stickyPositioningStyle","headingContent","key","getHeadingKey","renderHeadingContent","checkboxClassName","checkboxContent","renderCheckboxContent","ColumnHeaderCheckboxWrapper","labelHidden","onChange","handleSelectPage","checked","handleSortHeadingClick","direction","defaultTooltipProps","tooltipWidth","activatorWrapper","dismissOnMouseOut","persistOnClick","tooltipPersistsOnClick","defaultHeaderTooltipProps","padding","borderRadius","content","tooltipContent","preferredPosition","headingTitle","as","variant","fontWeight","visuallyHidden","new","wrap","tone","paddingBlockEnd","isCurrentlySorted","isPreviouslySorted","isRenderAfterSelectEvent","isAscending","newDirection","SourceComponent","iconMarkup","TableHeadingSortIcon","focusable","TableHeadingSortSvg","defaultSortButtonProps","onClick","TableHeadingSortButton","tabIndex","sortMarkup","TableHeadingTooltipUnderlinePlaceholder","SortableTableHeadingWithCustomMarkup","tooltipDirection","sortTooltipContent","TableHeadingUnderline","SortableTableHeaderWrapper","customActionText","itemsLength","actionText","onAction","_ref2","passedResourceName","onSelectionChange","indexTableBaseProps"],"sources":["/Users/henryspringer/Henry Cursor Folder/revenue-ai-dashboard/node_modules/@shopify/polaris/build/esm/components/IndexTable/IndexTable.js"],"sourcesContent":["import React, { useRef, useState, useCallback, useMemo, useEffect, useLayoutEffect } from 'react';\nimport { SortAscendingIcon, SortDescendingIcon } from '@shopify/polaris-icons';\nimport { CSSTransition } from 'react-transition-group';\nimport { debounce } from '../../utilities/debounce.js';\nimport { useToggle } from '../../utilities/use-toggle.js';\nimport { classNames } from '../../utilities/css.js';\nimport { useTheme } from '../../utilities/use-theme.js';\nimport styles from './IndexTable.css.js';\nimport { IndexProvider } from '../IndexProvider/IndexProvider.js';\nimport { Cell } from './components/Cell/Cell.js';\nimport { Row } from './components/Row/Row.js';\nimport { SELECT_ALL_ITEMS, SelectionType } from '../../utilities/index-provider/types.js';\nimport { getTableHeadingsBySelector } from './utilities/utilities.js';\nimport { EmptySearchResult } from '../EmptySearchResult/EmptySearchResult.js';\nimport { ScrollContainer } from './components/ScrollContainer/ScrollContainer.js';\nimport { BulkActions } from '../BulkActions/BulkActions.js';\nimport { useIndexValue, useIndexSelectionChange } from '../../utilities/index-provider/hooks.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { Spinner } from '../Spinner/Spinner.js';\nimport { AfterInitialMount } from '../AfterInitialMount/AfterInitialMount.js';\nimport { EventListener } from '../EventListener/EventListener.js';\nimport { Pagination } from '../Pagination/Pagination.js';\nimport { Checkbox } from '../Checkbox/Checkbox.js';\nimport { Text } from '../Text/Text.js';\nimport { LegacyStack } from '../LegacyStack/LegacyStack.js';\nimport { Badge } from '../Badge/Badge.js';\nimport { UnstyledButton } from '../UnstyledButton/UnstyledButton.js';\nimport { Tooltip } from '../Tooltip/Tooltip.js';\nimport { Sticky } from '../Sticky/Sticky.js';\n\nconst SCROLL_BAR_PADDING = 16;\nconst SCROLL_BAR_DEBOUNCE_PERIOD = 300;\nfunction IndexTableBase({\n  headings,\n  bulkActions = [],\n  promotedBulkActions = [],\n  children,\n  emptyState,\n  sort,\n  paginatedSelectAllActionText,\n  lastColumnSticky = false,\n  sortable,\n  sortDirection,\n  defaultSortDirection = 'descending',\n  sortColumnIndex,\n  onSort,\n  sortToggleLabels,\n  hasZebraStriping,\n  pagination,\n  ...restProps\n}) {\n  const theme = useTheme();\n  const {\n    loading,\n    bulkSelectState,\n    resourceName,\n    bulkActionsAccessibilityLabel,\n    selectMode,\n    selectable = restProps.selectable,\n    paginatedSelectAllText,\n    itemCount,\n    hasMoreItems,\n    selectedItemsCount,\n    condensed\n  } = useIndexValue();\n  const handleSelectionChange = useIndexSelectionChange();\n  const i18n = useI18n();\n  const {\n    value: hasMoreLeftColumns,\n    toggle: toggleHasMoreLeftColumns\n  } = useToggle(false);\n  const tablePosition = useRef({\n    top: 0,\n    left: 0\n  });\n  const tableHeadingRects = useRef([]);\n  const scrollableContainerElement = useRef(null);\n  const tableElement = useRef(null);\n  const tableBodyElement = useRef(null);\n  const condensedListElement = useRef(null);\n  const loadingElement = useRef(null);\n  const [tableInitialized, setTableInitialized] = useState(false);\n  const [stickyWrapper, setStickyWrapper] = useState(null);\n  const [hideScrollContainer, setHideScrollContainer] = useState(true);\n  const tableHeadings = useRef([]);\n  const stickyTableHeadings = useRef([]);\n  const stickyHeaderWrapperElement = useRef(null);\n  const firstStickyHeaderElement = useRef(null);\n  const stickyHeaderElement = useRef(null);\n  const scrollBarElement = useRef(null);\n  const scrollContainerElement = useRef(null);\n  const scrollingWithBar = useRef(false);\n  const scrollingContainer = useRef(false);\n  const lastSortedColumnIndex = useRef(sortColumnIndex);\n  const renderAfterSelectEvent = useRef(false);\n  const lastSelectedItemsCount = useRef(0);\n  const hasSelected = useRef(false);\n  if (selectedItemsCount !== lastSelectedItemsCount.current) {\n    renderAfterSelectEvent.current = true;\n    lastSelectedItemsCount.current = selectedItemsCount;\n  }\n  if (!hasSelected.current && selectedItemsCount !== 0) {\n    hasSelected.current = true;\n  }\n  const tableBodyRef = useCallback(node => {\n    if (node !== null && !tableInitialized) {\n      setTableInitialized(true);\n    }\n    tableBodyElement.current = node;\n  }, [tableInitialized]);\n  const handleSelectAllItemsInStore = useCallback(() => {\n    handleSelectionChange(selectedItemsCount === SELECT_ALL_ITEMS ? SelectionType.Page : SelectionType.All, true);\n  }, [handleSelectionChange, selectedItemsCount]);\n  const resizeTableHeadings = useMemo(() => debounce(() => {\n    if (!tableElement.current || !scrollableContainerElement.current) {\n      return;\n    }\n    const boundingRect = scrollableContainerElement.current.getBoundingClientRect();\n    tablePosition.current = {\n      top: boundingRect.top,\n      left: boundingRect.left\n    };\n    tableHeadingRects.current = tableHeadings.current.map(heading => ({\n      offsetWidth: heading.offsetWidth || 0,\n      offsetLeft: heading.offsetLeft || 0\n    }));\n    if (tableHeadings.current.length === 0) {\n      return;\n    }\n\n    // update left offset for first column\n    if (selectable && tableHeadings.current.length > 1) {\n      tableHeadings.current[1].style.left = `${tableHeadingRects.current[0].offsetWidth}px`;\n      if (stickyTableHeadings.current?.length) {\n        stickyTableHeadings.current[1].style.left = `${tableHeadingRects.current[0].offsetWidth}px`;\n      }\n    }\n\n    // update sticky header min-widths to match table widths\n    if (stickyTableHeadings.current?.length) {\n      stickyTableHeadings.current.forEach((heading, index) => {\n        heading.style.minWidth = `${tableHeadingRects.current[index]?.offsetWidth || 0}px`;\n      });\n    }\n  }), [selectable]);\n  const resizeTableScrollBar = useCallback(() => {\n    if (scrollBarElement.current && tableElement.current && tableInitialized) {\n      scrollBarElement.current.style.setProperty('--pc-index-table-scroll-bar-content-width', `${tableElement.current.offsetWidth - SCROLL_BAR_PADDING}px`);\n      setHideScrollContainer(scrollContainerElement.current?.offsetWidth === tableElement.current?.offsetWidth);\n    }\n  }, [tableInitialized]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debounceResizeTableScrollbar = useCallback(debounce(resizeTableScrollBar, SCROLL_BAR_DEBOUNCE_PERIOD, {\n    trailing: true\n  }), [resizeTableScrollBar]);\n  const [canScrollRight, setCanScrollRight] = useState(true);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const handleCanScrollRight = useCallback(debounce(() => {\n    if (!lastColumnSticky || !tableElement.current || !scrollableContainerElement.current) {\n      return;\n    }\n    const tableRect = tableElement.current.getBoundingClientRect();\n    const scrollableRect = scrollableContainerElement.current.getBoundingClientRect();\n    setCanScrollRight(tableRect.width > scrollableRect.width);\n  }), [lastColumnSticky]);\n  useEffect(() => {\n    handleCanScrollRight();\n  }, [handleCanScrollRight]);\n  const [canFitStickyColumn, setCanFitStickyColumn] = useState(true);\n  const handleCanFitStickyColumn = useCallback(() => {\n    if (!scrollableContainerElement.current || !tableHeadings.current.length) {\n      return;\n    }\n    const scrollableRect = scrollableContainerElement.current.getBoundingClientRect();\n    const checkboxColumnWidth = selectable ? tableHeadings.current[0].getBoundingClientRect().width : 0;\n    const firstStickyColumnWidth = tableHeadings.current[selectable ? 1 : 0].getBoundingClientRect().width;\n    const lastColumnIsNotTheFirst = selectable ? tableHeadings.current.length > 2 : 1;\n    // Don't consider the last column in the calculations if it's not sticky\n    const lastStickyColumnWidth = lastColumnSticky && lastColumnIsNotTheFirst ? tableHeadings.current[tableHeadings.current.length - 1].getBoundingClientRect().width : 0;\n    // Secure some space for the remaining columns to be visible\n    const restOfContentMinWidth = 100;\n    setCanFitStickyColumn(scrollableRect.width > firstStickyColumnWidth + checkboxColumnWidth + lastStickyColumnWidth + restOfContentMinWidth);\n  }, [lastColumnSticky, selectable]);\n  useEffect(() => {\n    if (tableInitialized) {\n      handleCanFitStickyColumn();\n    }\n  }, [handleCanFitStickyColumn, tableInitialized]);\n  const handleResize = useCallback(() => {\n    // hide the scrollbar when resizing\n    scrollBarElement.current?.style.setProperty('--pc-index-table-scroll-bar-content-width', `0px`);\n    resizeTableHeadings();\n    debounceResizeTableScrollbar();\n    handleCanScrollRight();\n    handleCanFitStickyColumn();\n  }, [resizeTableHeadings, debounceResizeTableScrollbar, handleCanScrollRight, handleCanFitStickyColumn]);\n  const handleScrollContainerScroll = useCallback((canScrollLeft, canScrollRight) => {\n    if (!scrollableContainerElement.current || !scrollBarElement.current) {\n      return;\n    }\n    if (!scrollingWithBar.current) {\n      scrollingContainer.current = true;\n      scrollBarElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;\n    }\n    scrollingWithBar.current = false;\n    if (stickyHeaderElement.current) {\n      stickyHeaderElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;\n    }\n    if (canScrollLeft && !hasMoreLeftColumns || !canScrollLeft && hasMoreLeftColumns) {\n      toggleHasMoreLeftColumns();\n    }\n    setCanScrollRight(canScrollRight);\n  }, [hasMoreLeftColumns, toggleHasMoreLeftColumns]);\n  const handleScrollBarScroll = useCallback(() => {\n    if (!scrollableContainerElement.current || !scrollBarElement.current) {\n      return;\n    }\n    if (!scrollingContainer.current) {\n      scrollingWithBar.current = true;\n      scrollableContainerElement.current.scrollLeft = scrollBarElement.current.scrollLeft;\n    }\n    scrollingContainer.current = false;\n  }, []);\n  useLayoutEffect(() => {\n    tableHeadings.current = getTableHeadingsBySelector(tableElement.current, '[data-index-table-heading]');\n    stickyTableHeadings.current = getTableHeadingsBySelector(stickyHeaderWrapperElement.current, '[data-index-table-sticky-heading]');\n    resizeTableHeadings();\n  }, [headings, resizeTableHeadings, firstStickyHeaderElement, tableInitialized]);\n  useEffect(() => {\n    resizeTableScrollBar();\n    setStickyWrapper(condensed ? condensedListElement.current : tableElement.current);\n  }, [tableInitialized, resizeTableScrollBar, condensed]);\n  const headingsMarkup = headings.map((heading, index) => renderHeading(heading, index, 'th', {\n    'data-index-table-heading': true\n  }, heading.id));\n  const stickyHeadingsMarkup = headings.map((heading, index) =>\n  // NOTE: No id since it would be a duplicate of the non-sticky header's id\n  renderHeading(heading, index, 'div', {\n    'data-index-table-sticky-heading': true\n  }));\n  const [selectedItemsCountValue, setSelectedItemsCountValue] = useState(selectedItemsCount === SELECT_ALL_ITEMS ? `${itemCount}+` : selectedItemsCount);\n  useEffect(() => {\n    if (selectedItemsCount === SELECT_ALL_ITEMS || selectedItemsCount > 0) {\n      setSelectedItemsCountValue(selectedItemsCount === SELECT_ALL_ITEMS ? `${itemCount}+` : selectedItemsCount);\n    }\n  }, [selectedItemsCount, itemCount]);\n  const selectAllActionsLabel = i18n.translate('Polaris.IndexTable.selected', {\n    selectedItemsCount: selectedItemsCountValue\n  });\n  const handleTogglePage = useCallback(() => {\n    handleSelectionChange(SelectionType.Page, Boolean(!bulkSelectState || bulkSelectState === 'indeterminate'));\n  }, [bulkSelectState, handleSelectionChange]);\n  const paginatedSelectAllAction = getPaginatedSelectAllAction();\n  const loadingTransitionClassNames = {\n    enter: styles['LoadingContainer-enter'],\n    enterActive: styles['LoadingContainer-enter-active'],\n    exit: styles['LoadingContainer-exit'],\n    exitActive: styles['LoadingContainer-exit-active']\n  };\n  const loadingMarkup = /*#__PURE__*/React.createElement(CSSTransition, {\n    in: loading,\n    classNames: loadingTransitionClassNames,\n    timeout: parseInt(theme.motion['motion-duration-100'], 10),\n    nodeRef: loadingElement,\n    appear: true,\n    unmountOnExit: true\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.LoadingPanel,\n    ref: loadingElement\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.LoadingPanelRow\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: \"small\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.LoadingPanelText\n  }, i18n.translate('Polaris.IndexTable.resourceLoadingAccessibilityLabel', {\n    resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n  })))));\n  const stickyTableClassNames = classNames(styles.StickyTable, hasMoreLeftColumns && styles['StickyTable-scrolling'], condensed && styles['StickyTable-condensed']);\n  const shouldShowActions = !condensed || selectedItemsCount;\n  const promotedActions = shouldShowActions ? promotedBulkActions : [];\n  const actions = shouldShowActions ? bulkActions : [];\n  const stickyHeaderMarkup = /*#__PURE__*/React.createElement(\"div\", {\n    className: stickyTableClassNames,\n    role: \"presentation\"\n  }, /*#__PURE__*/React.createElement(Sticky, {\n    boundingElement: stickyWrapper\n  }, isSticky => {\n    const stickyHeaderClassNames = classNames(styles.StickyTableHeader, isSticky && styles['StickyTableHeader-isSticky'],\n    // Has a sticky left column enabled\n    canFitStickyColumn && styles['StickyTableHeader-sticky'],\n    // ie; is scrolled to the right\n    hasMoreLeftColumns && styles['StickyTableHeader-scrolling'],\n    // Has a sticky right column enabled\n    canFitStickyColumn && lastColumnSticky && styles['StickyTableHeader-sticky-last'],\n    // ie; is scrolled to the left\n    canFitStickyColumn && lastColumnSticky && canScrollRight && styles['StickyTableHeader-sticky-scrolling']);\n    const bulkActionsClassName = classNames(styles.BulkActionsWrapper, selectMode && styles.BulkActionsWrapperVisible, condensed && styles['StickyTableHeader-condensed'], isSticky && styles['StickyTableHeader-isSticky']);\n    const bulkActionsMarkup = shouldShowActions && !condensed ? /*#__PURE__*/React.createElement(\"div\", {\n      className: bulkActionsClassName\n    }, /*#__PURE__*/React.createElement(BulkActions, {\n      selectMode: selectMode,\n      onToggleAll: handleTogglePage,\n      paginatedSelectAllText: paginatedSelectAllText,\n      paginatedSelectAllAction: paginatedSelectAllAction,\n      accessibilityLabel: bulkActionsAccessibilityLabel,\n      selected: bulkSelectState,\n      promotedActions: promotedActions,\n      actions: actions,\n      onSelectModeToggle: condensed ? handleSelectModeToggle : undefined,\n      label: selectAllActionsLabel,\n      buttonSize: \"micro\"\n    })) : null;\n    const headerMarkup = condensed ? /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(styles.HeaderWrapper, (!selectable || condensed) && styles.unselectable)\n    }, loadingMarkup, sort) : /*#__PURE__*/React.createElement(\"div\", {\n      className: stickyHeaderClassNames,\n      ref: stickyHeaderWrapperElement\n    }, loadingMarkup, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.StickyTableHeadings,\n      ref: stickyHeaderElement\n    }, stickyHeadingsMarkup));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, headerMarkup, bulkActionsMarkup);\n  }));\n  const scrollBarWrapperClassNames = classNames(styles.ScrollBarContainer, pagination && styles.ScrollBarContainerWithPagination, condensed && styles.scrollBarContainerCondensed, hideScrollContainer && styles.scrollBarContainerHidden);\n  const scrollBarClassNames = classNames(tableElement.current && tableInitialized && styles.ScrollBarContent);\n  const scrollBarMarkup = itemCount > 0 ? /*#__PURE__*/React.createElement(AfterInitialMount, {\n    onMount: resizeTableScrollBar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: scrollBarWrapperClassNames,\n    ref: scrollContainerElement\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onScroll: handleScrollBarScroll,\n    className: styles.ScrollBar,\n    ref: scrollBarElement\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: scrollBarClassNames\n  })))) : null;\n  const isSortable = sortable?.some(value => value);\n  const tableClassNames = classNames(styles.Table, hasMoreLeftColumns && styles['Table-scrolling'], selectMode && styles.disableTextSelection, !selectable && styles['Table-unselectable'], canFitStickyColumn && styles['Table-sticky'], isSortable && styles['Table-sortable'], canFitStickyColumn && lastColumnSticky && styles['Table-sticky-last'], canFitStickyColumn && lastColumnSticky && canScrollRight && styles['Table-sticky-scrolling'], hasZebraStriping && styles.ZebraStriping);\n  const emptyStateMarkup = emptyState ? emptyState : /*#__PURE__*/React.createElement(EmptySearchResult, {\n    title: i18n.translate('Polaris.IndexTable.emptySearchTitle', {\n      resourceNamePlural: resourceName.plural\n    }),\n    description: i18n.translate('Polaris.IndexTable.emptySearchDescription'),\n    withIllustration: true\n  });\n  const sharedMarkup = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EventListener, {\n    event: \"resize\",\n    handler: handleResize\n  }), stickyHeaderMarkup);\n  const condensedClassNames = classNames(styles.CondensedList, hasZebraStriping && styles.ZebraStriping);\n  const bodyMarkup = condensed ? /*#__PURE__*/React.createElement(React.Fragment, null, sharedMarkup, /*#__PURE__*/React.createElement(\"ul\", {\n    \"data-selectmode\": Boolean(selectMode),\n    className: condensedClassNames,\n    ref: condensedListElement\n  }, children)) : /*#__PURE__*/React.createElement(React.Fragment, null, sharedMarkup, /*#__PURE__*/React.createElement(ScrollContainer, {\n    scrollableContainerRef: scrollableContainerElement,\n    onScroll: handleScrollContainerScroll\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    ref: tableElement,\n    className: tableClassNames\n  }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", {\n    className: styles.HeadingRow\n  }, headingsMarkup)), /*#__PURE__*/React.createElement(\"tbody\", {\n    ref: tableBodyRef\n  }, children))));\n  const tableContentMarkup = itemCount > 0 ? bodyMarkup : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.EmptySearchResultWrapper\n  }, emptyStateMarkup);\n  const paginationMarkup = pagination ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.PaginationWrapper\n  }, /*#__PURE__*/React.createElement(Pagination, Object.assign({\n    type: \"table\"\n  }, pagination))) : null;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.IndexTable\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.IndexTableWrapper\n  }, !condensed && loadingMarkup, tableContentMarkup, scrollBarMarkup, paginationMarkup)));\n  function renderHeading(heading, index, Tag, tagProps, id) {\n    const isSecond = index === 0;\n    const isLast = index === headings.length - 1;\n    const hasSortable = sortable?.some(value => value === true);\n    const headingAlignment = heading.alignment || 'start';\n    const headingContentClassName = classNames(styles.TableHeading, headingAlignment === 'center' && styles['TableHeading-align-center'], headingAlignment === 'end' && styles['TableHeading-align-end'], hasSortable && styles['TableHeading-sortable'], isSecond && styles['TableHeading-second'], isLast && !heading.hidden && styles['TableHeading-last'], !selectable && styles['TableHeading-unselectable'], heading.flush && styles['TableHeading-flush']);\n    const stickyPositioningStyle = selectable !== false && isSecond && tableHeadingRects.current && tableHeadingRects.current.length > 0 ? {\n      left: tableHeadingRects.current[0].offsetWidth\n    } : undefined;\n    const headingContent = /*#__PURE__*/React.createElement(Tag, Object.assign({\n      id: id,\n      className: headingContentClassName,\n      key: getHeadingKey(heading),\n      style: stickyPositioningStyle\n    }, tagProps), renderHeadingContent(heading, index));\n    if (index !== 0 || !selectable) {\n      return headingContent;\n    }\n    const checkboxClassName = classNames(styles.TableHeading, hasSortable && styles['TableHeading-sortable'], index === 0 && styles['TableHeading-first']);\n    const checkboxContent = /*#__PURE__*/React.createElement(Tag, Object.assign({\n      className: checkboxClassName,\n      key: `${heading}-${index}`\n    }, tagProps), renderCheckboxContent());\n    return [checkboxContent, headingContent];\n  }\n  function renderCheckboxContent() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.ColumnHeaderCheckboxWrapper\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      label: i18n.translate('Polaris.IndexTable.selectAllLabel', {\n        resourceNamePlural: resourceName.plural\n      }),\n      labelHidden: true,\n      onChange: handleSelectPage,\n      checked: bulkSelectState\n    }));\n  }\n  function handleSortHeadingClick(index, direction) {\n    renderAfterSelectEvent.current = false;\n    hasSelected.current = false;\n    lastSortedColumnIndex.current = sortColumnIndex;\n    onSort?.(index, direction);\n  }\n  function renderHeadingContent(heading, index) {\n    let headingContent;\n    const defaultTooltipProps = {\n      width: heading.tooltipWidth ?? 'default',\n      activatorWrapper: 'div',\n      dismissOnMouseOut: true,\n      persistOnClick: heading.tooltipPersistsOnClick\n    };\n    const defaultHeaderTooltipProps = {\n      ...defaultTooltipProps,\n      padding: '400',\n      borderRadius: '200',\n      content: heading.tooltipContent,\n      preferredPosition: 'above'\n    };\n    const headingTitle = /*#__PURE__*/React.createElement(Text, {\n      as: \"span\",\n      variant: \"bodySm\",\n      fontWeight: \"medium\",\n      visuallyHidden: heading.hidden\n    }, heading.title);\n    if (heading.new) {\n      headingContent = /*#__PURE__*/React.createElement(LegacyStack, {\n        wrap: false,\n        alignment: \"center\"\n      }, headingTitle, /*#__PURE__*/React.createElement(Badge, {\n        tone: \"new\"\n      }, i18n.translate('Polaris.IndexTable.onboardingBadgeText')));\n    } else {\n      headingContent = headingTitle;\n    }\n    const style = {\n      '--pc-index-table-heading-extra-padding-right': heading.paddingBlockEnd ? `var(--p-space-${heading.paddingBlockEnd})` : '0'\n    };\n    if (sortable?.[index]) {\n      const isCurrentlySorted = index === sortColumnIndex;\n      const isPreviouslySorted = !isCurrentlySorted && index === lastSortedColumnIndex.current;\n      const isRenderAfterSelectEvent = renderAfterSelectEvent.current || !hasSelected.current && selectedItemsCount !== 0;\n      const isAscending = sortDirection === 'ascending';\n      let newDirection = heading.defaultSortDirection ?? defaultSortDirection;\n      let SourceComponent = newDirection === 'ascending' ? SortAscendingIcon : SortDescendingIcon;\n      if (isCurrentlySorted) {\n        newDirection = isAscending ? 'descending' : 'ascending';\n        SourceComponent = sortDirection === 'ascending' ? SortAscendingIcon : SortDescendingIcon;\n      }\n      const iconMarkup = /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames(styles.TableHeadingSortIcon, heading?.alignment === 'end' && styles['TableHeadingSortIcon-heading-align-end'], isCurrentlySorted && styles['TableHeadingSortIcon-visible'])\n      }, /*#__PURE__*/React.createElement(SourceComponent, {\n        focusable: \"false\",\n        \"aria-hidden\": \"true\",\n        className: styles.TableHeadingSortSvg\n      }));\n      const defaultSortButtonProps = {\n        onClick: () => handleSortHeadingClick(index, newDirection),\n        className: classNames(styles.TableHeadingSortButton, !isCurrentlySorted && heading?.alignment === 'end' && styles['TableHeadingSortButton-heading-align-end'], isCurrentlySorted && heading?.alignment === 'end' && styles['TableHeadingSortButton-heading-align-end-currently-sorted'], isPreviouslySorted && !isRenderAfterSelectEvent && heading?.alignment === 'end' && styles['TableHeadingSortButton-heading-align-end-previously-sorted']),\n        tabIndex: selectMode ? -1 : 0\n      };\n      const sortMarkup = /*#__PURE__*/React.createElement(UnstyledButton, defaultSortButtonProps, iconMarkup, /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames(sortToggleLabels && selectMode && heading.tooltipContent && styles.TableHeadingTooltipUnderlinePlaceholder)\n      }, headingContent));\n      if (!sortToggleLabels || selectMode) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: styles.SortableTableHeadingWithCustomMarkup\n        }, sortMarkup);\n      }\n      const tooltipDirection = isCurrentlySorted ? sortDirection : newDirection;\n      const sortTooltipContent = sortToggleLabels[index][tooltipDirection];\n      if (!heading.tooltipContent) {\n        return (\n          /*#__PURE__*/\n          // Regular header with sort icon and sort direction tooltip\n          React.createElement(\"div\", {\n            style: style,\n            className: classNames(heading.paddingBlockEnd && styles['TableHeading-extra-padding-right'])\n          }, /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, defaultTooltipProps, {\n            content: sortTooltipContent,\n            preferredPosition: \"above\"\n          }), sortMarkup))\n        );\n      }\n      if (heading.tooltipContent) {\n        return (\n          /*#__PURE__*/\n          // Header text and sort icon have separate tooltips\n          React.createElement(\"div\", {\n            className: classNames(styles.SortableTableHeadingWithCustomMarkup, heading.paddingBlockEnd && styles['TableHeading-extra-padding-right']),\n            style: style\n          }, /*#__PURE__*/React.createElement(UnstyledButton, defaultSortButtonProps, /*#__PURE__*/React.createElement(Tooltip, defaultHeaderTooltipProps, /*#__PURE__*/React.createElement(\"span\", {\n            className: styles.TableHeadingUnderline\n          }, headingContent)), /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, defaultTooltipProps, {\n            content: sortTooltipContent,\n            preferredPosition: \"above\"\n          }), iconMarkup)))\n        );\n      }\n    }\n    if (heading.tooltipContent) {\n      return (\n        /*#__PURE__*/\n        // Non-sortable header with tooltip\n        React.createElement(\"div\", {\n          style: style,\n          className: classNames(heading.paddingBlockEnd && styles['TableHeading-extra-padding-right'])\n        }, /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, defaultHeaderTooltipProps, {\n          activatorWrapper: \"span\"\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: classNames(styles.TableHeadingUnderline, styles.SortableTableHeaderWrapper)\n        }, headingContent)))\n      );\n    }\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: style,\n      className: classNames(heading.paddingBlockEnd && styles['TableHeading-extra-padding-right'])\n    }, headingContent);\n  }\n  function handleSelectPage(checked) {\n    handleSelectionChange(SelectionType.Page, checked);\n  }\n  function getPaginatedSelectAllAction() {\n    if (!selectable || !hasMoreItems) {\n      return;\n    }\n    const customActionText = paginatedSelectAllActionText ?? i18n.translate('Polaris.IndexTable.selectAllItems', {\n      itemsLength: itemCount,\n      resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n    });\n    const actionText = selectedItemsCount === SELECT_ALL_ITEMS ? i18n.translate('Polaris.IndexTable.undo') : customActionText;\n    return {\n      content: actionText,\n      onAction: handleSelectAllItemsInStore\n    };\n  }\n  function handleSelectModeToggle() {\n    handleSelectionChange(SelectionType.All, false);\n  }\n}\nfunction getHeadingKey(heading) {\n  if (heading.id) {\n    return heading.id;\n  } else if (typeof heading.title === 'string') {\n    return heading.title;\n  }\n  return '';\n}\nfunction IndexTable({\n  children,\n  selectable = true,\n  itemCount,\n  selectedItemsCount = 0,\n  resourceName: passedResourceName,\n  loading,\n  hasMoreItems,\n  condensed,\n  onSelectionChange,\n  paginatedSelectAllText,\n  ...indexTableBaseProps\n}) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IndexProvider, {\n    selectable: selectable && !condensed,\n    itemCount: itemCount,\n    selectedItemsCount: selectedItemsCount,\n    resourceName: passedResourceName,\n    loading: loading,\n    hasMoreItems: hasMoreItems,\n    condensed: condensed,\n    onSelectionChange: onSelectionChange,\n    paginatedSelectAllText: paginatedSelectAllText\n  }, /*#__PURE__*/React.createElement(IndexTableBase, indexTableBaseProps, children)));\n}\nIndexTable.Cell = Cell;\nIndexTable.Row = Row;\n\nexport { IndexTable };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}